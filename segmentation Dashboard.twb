<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0325.1233                               -->
<workbook original-version='18.1' source-build='2021.4.5 (20214.22.0325.1233)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
        <calculation class='tableau' formula='&quot;Total Sales&quot;' />
        <members>
          <member value='&quot;Total Sales&quot;' />
          <member value='&quot;Total Transactions&quot;' />
        </members>
      </column>
      <column caption='Covid Parameter' datatype='datetime' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-16 14:35:30#'>
        <calculation class='tableau' formula='#2020-03-16 14:35:30#' />
      </column>
      <column caption='Covid End Parameter' datatype='datetime' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2020-05-04 14:35:47#'>
        <calculation class='tableau' formula='#2020-05-04 14:35:47#' />
      </column>
    </datasource>
    <datasource caption='final_h&amp;m_dataset' inline='true' name='federated.19bcibn0s49ltq19trvq7062mv6e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final_h&amp;m_dataset' name='textscan.1iydehp0drnvnr19hoq1g1pag99j'>
            <connection class='textscan' directory='/Users/ukumbhar/Downloads/H&amp;M sales' filename='rfm_h&amp;m_dataset3.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1iydehp0drnvnr19hoq1g1pag99j' name='final_h&amp;m_dataset.csv' table='[final_h&amp;m_dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='customer_id' ordinal='0' />
            <column datatype='string' name='club_member_status' ordinal='1' />
            <column datatype='string' name='fashion_news_frequency' ordinal='2' />
            <column datatype='real' name='age' ordinal='3' />
            <column datatype='string' name='postal_code' ordinal='4' />
            <column datatype='date' name='t_dat' ordinal='5' />
            <column datatype='integer' name='article_id' ordinal='6' />
            <column datatype='real' name='price' ordinal='7' />
            <column datatype='real' name='sales_channel_id' ordinal='8' />
            <column datatype='integer' name='product_code' ordinal='9' />
            <column datatype='string' name='prod_name' ordinal='10' />
            <column datatype='real' name='product_type_no' ordinal='11' />
            <column datatype='string' name='product_type_name' ordinal='12' />
            <column datatype='string' name='product_group_name' ordinal='13' />
            <column datatype='real' name='graphical_appearance_no' ordinal='14' />
            <column datatype='string' name='graphical_appearance_name' ordinal='15' />
            <column datatype='real' name='colour_group_code' ordinal='16' />
            <column datatype='string' name='colour_group_name' ordinal='17' />
            <column datatype='real' name='perceived_colour_value_id' ordinal='18' />
            <column datatype='string' name='perceived_colour_value_name' ordinal='19' />
            <column datatype='real' name='perceived_colour_master_id' ordinal='20' />
            <column datatype='string' name='perceived_colour_master_name' ordinal='21' />
            <column datatype='real' name='department_no' ordinal='22' />
            <column datatype='string' name='department_name' ordinal='23' />
            <column datatype='string' name='index_code' ordinal='24' />
            <column datatype='string' name='index_name' ordinal='25' />
            <column datatype='real' name='index_group_no' ordinal='26' />
            <column datatype='string' name='index_group_name' ordinal='27' />
            <column datatype='real' name='section_no' ordinal='28' />
            <column datatype='string' name='section_name' ordinal='29' />
            <column datatype='real' name='garment_group_no' ordinal='30' />
            <column datatype='string' name='garment_group_name' ordinal='31' />
            <column datatype='string' name='detail_desc' ordinal='32' />
            <column datatype='integer' name='Quantity' ordinal='33' />
            <column datatype='real' name='TotalSum' ordinal='34' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1iydehp0drnvnr19hoq1g1pag99j' name='final_h&amp;m_dataset.csv' table='[final_h&amp;m_dataset#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='customer_id' ordinal='0' />
              <column datatype='string' name='club_member_status' ordinal='1' />
              <column datatype='string' name='fashion_news_frequency' ordinal='2' />
              <column datatype='real' name='age' ordinal='3' />
              <column datatype='string' name='postal_code' ordinal='4' />
              <column datatype='date' name='t_dat' ordinal='5' />
              <column datatype='integer' name='article_id' ordinal='6' />
              <column datatype='real' name='price' ordinal='7' />
              <column datatype='real' name='sales_channel_id' ordinal='8' />
              <column datatype='integer' name='product_code' ordinal='9' />
              <column datatype='string' name='prod_name' ordinal='10' />
              <column datatype='real' name='product_type_no' ordinal='11' />
              <column datatype='string' name='product_type_name' ordinal='12' />
              <column datatype='string' name='product_group_name' ordinal='13' />
              <column datatype='real' name='graphical_appearance_no' ordinal='14' />
              <column datatype='string' name='graphical_appearance_name' ordinal='15' />
              <column datatype='real' name='colour_group_code' ordinal='16' />
              <column datatype='string' name='colour_group_name' ordinal='17' />
              <column datatype='real' name='perceived_colour_value_id' ordinal='18' />
              <column datatype='string' name='perceived_colour_value_name' ordinal='19' />
              <column datatype='real' name='perceived_colour_master_id' ordinal='20' />
              <column datatype='string' name='perceived_colour_master_name' ordinal='21' />
              <column datatype='real' name='department_no' ordinal='22' />
              <column datatype='string' name='department_name' ordinal='23' />
              <column datatype='string' name='index_code' ordinal='24' />
              <column datatype='string' name='index_name' ordinal='25' />
              <column datatype='real' name='index_group_no' ordinal='26' />
              <column datatype='string' name='index_group_name' ordinal='27' />
              <column datatype='real' name='section_no' ordinal='28' />
              <column datatype='string' name='section_name' ordinal='29' />
              <column datatype='real' name='garment_group_no' ordinal='30' />
              <column datatype='string' name='garment_group_name' ordinal='31' />
              <column datatype='string' name='detail_desc' ordinal='32' />
              <column datatype='integer' name='Quantity' ordinal='33' />
              <column datatype='real' name='TotalSum' ordinal='34' />
            </columns>
          </relation>
          <relation connection='textscan.1iydehp0drnvnr19hoq1g1pag99j' name='rfm_h&amp;m_dataset3.csv' table='[rfm_h&amp;m_dataset3#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='customer_id' ordinal='1' />
              <column datatype='integer' name='Recency' ordinal='2' />
              <column datatype='integer' name='Frequency' ordinal='3' />
              <column datatype='real' name='Monetary' ordinal='4' />
              <column datatype='integer' name='R_Quartile' ordinal='5' />
              <column datatype='integer' name='F_Quartile' ordinal='6' />
              <column datatype='integer' name='M_Quartile' ordinal='7' />
              <column datatype='integer' name='RFM_Scores' ordinal='8' />
              <column datatype='string' name='RFM_Scores_Segments' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1]' value='[rfm_h&amp;m_dataset3.csv].[F1]' />
          <map key='[F_Quartile]' value='[rfm_h&amp;m_dataset3.csv].[F_Quartile]' />
          <map key='[Frequency]' value='[rfm_h&amp;m_dataset3.csv].[Frequency]' />
          <map key='[M_Quartile]' value='[rfm_h&amp;m_dataset3.csv].[M_Quartile]' />
          <map key='[Monetary]' value='[rfm_h&amp;m_dataset3.csv].[Monetary]' />
          <map key='[Quantity]' value='[final_h&amp;m_dataset.csv].[Quantity]' />
          <map key='[RFM_Scores]' value='[rfm_h&amp;m_dataset3.csv].[RFM_Scores]' />
          <map key='[RFM_Scores_Segments]' value='[rfm_h&amp;m_dataset3.csv].[RFM_Scores_Segments]' />
          <map key='[R_Quartile]' value='[rfm_h&amp;m_dataset3.csv].[R_Quartile]' />
          <map key='[Recency]' value='[rfm_h&amp;m_dataset3.csv].[Recency]' />
          <map key='[TotalSum]' value='[final_h&amp;m_dataset.csv].[TotalSum]' />
          <map key='[age]' value='[final_h&amp;m_dataset.csv].[age]' />
          <map key='[article_id]' value='[final_h&amp;m_dataset.csv].[article_id]' />
          <map key='[club_member_status]' value='[final_h&amp;m_dataset.csv].[club_member_status]' />
          <map key='[colour_group_code]' value='[final_h&amp;m_dataset.csv].[colour_group_code]' />
          <map key='[colour_group_name]' value='[final_h&amp;m_dataset.csv].[colour_group_name]' />
          <map key='[customer_id (rfm_h&amp;m_dataset3.csv)]' value='[rfm_h&amp;m_dataset3.csv].[customer_id]' />
          <map key='[customer_id]' value='[final_h&amp;m_dataset.csv].[customer_id]' />
          <map key='[department_name]' value='[final_h&amp;m_dataset.csv].[department_name]' />
          <map key='[department_no]' value='[final_h&amp;m_dataset.csv].[department_no]' />
          <map key='[detail_desc]' value='[final_h&amp;m_dataset.csv].[detail_desc]' />
          <map key='[fashion_news_frequency]' value='[final_h&amp;m_dataset.csv].[fashion_news_frequency]' />
          <map key='[garment_group_name]' value='[final_h&amp;m_dataset.csv].[garment_group_name]' />
          <map key='[garment_group_no]' value='[final_h&amp;m_dataset.csv].[garment_group_no]' />
          <map key='[graphical_appearance_name]' value='[final_h&amp;m_dataset.csv].[graphical_appearance_name]' />
          <map key='[graphical_appearance_no]' value='[final_h&amp;m_dataset.csv].[graphical_appearance_no]' />
          <map key='[index_code]' value='[final_h&amp;m_dataset.csv].[index_code]' />
          <map key='[index_group_name]' value='[final_h&amp;m_dataset.csv].[index_group_name]' />
          <map key='[index_group_no]' value='[final_h&amp;m_dataset.csv].[index_group_no]' />
          <map key='[index_name]' value='[final_h&amp;m_dataset.csv].[index_name]' />
          <map key='[perceived_colour_master_id]' value='[final_h&amp;m_dataset.csv].[perceived_colour_master_id]' />
          <map key='[perceived_colour_master_name]' value='[final_h&amp;m_dataset.csv].[perceived_colour_master_name]' />
          <map key='[perceived_colour_value_id]' value='[final_h&amp;m_dataset.csv].[perceived_colour_value_id]' />
          <map key='[perceived_colour_value_name]' value='[final_h&amp;m_dataset.csv].[perceived_colour_value_name]' />
          <map key='[postal_code]' value='[final_h&amp;m_dataset.csv].[postal_code]' />
          <map key='[price]' value='[final_h&amp;m_dataset.csv].[price]' />
          <map key='[prod_name]' value='[final_h&amp;m_dataset.csv].[prod_name]' />
          <map key='[product_code]' value='[final_h&amp;m_dataset.csv].[product_code]' />
          <map key='[product_group_name]' value='[final_h&amp;m_dataset.csv].[product_group_name]' />
          <map key='[product_type_name]' value='[final_h&amp;m_dataset.csv].[product_type_name]' />
          <map key='[product_type_no]' value='[final_h&amp;m_dataset.csv].[product_type_no]' />
          <map key='[sales_channel_id]' value='[final_h&amp;m_dataset.csv].[sales_channel_id]' />
          <map key='[section_name]' value='[final_h&amp;m_dataset.csv].[section_name]' />
          <map key='[section_no]' value='[final_h&amp;m_dataset.csv].[section_no]' />
          <map key='[t_dat]' value='[final_h&amp;m_dataset.csv].[t_dat]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>club_member_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[club_member_status]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>club_member_status</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fashion_news_frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fashion_news_frequency]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>fashion_news_frequency</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>t_dat</remote-name>
            <remote-type>133</remote-type>
            <local-name>[t_dat]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>t_dat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>article_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[article_id]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>article_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_channel_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_channel_id]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>sales_channel_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prod_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prod_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>prod_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[product_type_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>product_type_no</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_type_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>product_type_name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_group_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>product_group_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>graphical_appearance_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[graphical_appearance_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>graphical_appearance_no</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>graphical_appearance_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[graphical_appearance_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>graphical_appearance_name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>colour_group_code</remote-name>
            <remote-type>5</remote-type>
            <local-name>[colour_group_code]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>colour_group_code</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>colour_group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[colour_group_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>colour_group_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perceived_colour_value_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perceived_colour_value_id]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>perceived_colour_value_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perceived_colour_value_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[perceived_colour_value_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>perceived_colour_value_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perceived_colour_master_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perceived_colour_master_id]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>perceived_colour_master_id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perceived_colour_master_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[perceived_colour_master_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>perceived_colour_master_name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[department_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>department_no</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[department_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>department_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_code]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>index_code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>index_name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_group_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_group_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>index_group_no</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_group_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>index_group_name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[section_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>section_no</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[section_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>section_name</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>garment_group_no</remote-name>
            <remote-type>5</remote-type>
            <local-name>[garment_group_no]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>garment_group_no</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>garment_group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[garment_group_name]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>garment_group_name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detail_desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detail_desc]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>detail_desc</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSum]</local-name>
            <parent-name>[final_h&amp;m_dataset.csv]</parent-name>
            <remote-alias>TotalSum</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id (rfm_h&amp;m_dataset3.csv)]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recency</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recency]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>Recency</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Frequency]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monetary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monetary]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>Monetary</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R_Quartile</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R_Quartile]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>R_Quartile</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F_Quartile</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F_Quartile]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>F_Quartile</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M_Quartile</remote-name>
            <remote-type>20</remote-type>
            <local-name>[M_Quartile]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>M_Quartile</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RFM_Scores</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RFM_Scores]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>RFM_Scores</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RFM_Scores_Segments</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RFM_Scores_Segments]</local-name>
            <parent-name>[rfm_h&amp;m_dataset3.csv]</parent-name>
            <remote-alias>RFM_Scores_Segments</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[age]' new-bin='true'>
          <bin default-name='false' value='&quot;0-20&quot;'>
            <value>16.0</value>
            <value>17.0</value>
            <value>18.0</value>
            <value>19.0</value>
            <value>20.0</value>
          </bin>
          <bin default-name='false' value='&quot;21-30&quot;'>
            <value>21.0</value>
            <value>22.0</value>
            <value>23.0</value>
            <value>24.0</value>
            <value>25.0</value>
            <value>26.0</value>
            <value>27.0</value>
            <value>28.0</value>
            <value>29.0</value>
            <value>30.0</value>
          </bin>
          <bin default-name='false' value='&quot;31-40&quot;'>
            <value>31.0</value>
            <value>32.0</value>
            <value>33.0</value>
            <value>34.0</value>
            <value>35.0</value>
            <value>36.0</value>
            <value>37.0</value>
            <value>38.0</value>
            <value>39.0</value>
            <value>40.0</value>
          </bin>
          <bin default-name='false' value='&quot;41-50&quot;'>
            <value>41.0</value>
            <value>42.0</value>
            <value>43.0</value>
            <value>44.0</value>
            <value>45.0</value>
            <value>46.0</value>
            <value>47.0</value>
            <value>48.0</value>
            <value>49.0</value>
            <value>50.0</value>
          </bin>
          <bin default-name='false' value='&quot;51-60&quot;'>
            <value>51.0</value>
            <value>52.0</value>
            <value>53.0</value>
            <value>54.0</value>
            <value>55.0</value>
            <value>56.0</value>
            <value>57.0</value>
            <value>58.0</value>
            <value>59.0</value>
            <value>60.0</value>
          </bin>
          <bin default-name='false' value='&quot;61-70&quot;'>
            <value>61.0</value>
            <value>62.0</value>
            <value>63.0</value>
            <value>64.0</value>
            <value>65.0</value>
            <value>66.0</value>
            <value>67.0</value>
            <value>68.0</value>
            <value>69.0</value>
            <value>70.0</value>
          </bin>
          <bin default-name='false' value='&quot;71+&quot;'>
            <value>71.0</value>
            <value>72.0</value>
            <value>73.0</value>
            <value>74.0</value>
            <value>75.0</value>
            <value>76.0</value>
            <value>77.0</value>
            <value>78.0</value>
            <value>79.0</value>
            <value>80.0</value>
            <value>81.0</value>
            <value>82.0</value>
            <value>83.0</value>
            <value>84.0</value>
            <value>85.0</value>
            <value>86.0</value>
            <value>87.0</value>
            <value>88.0</value>
            <value>89.0</value>
            <value>90.0</value>
            <value>91.0</value>
            <value>92.0</value>
            <value>98.0</value>
            <value>99.0</value>
          </bin>
        </calculation>
      </column>
      <column caption='Revenue' datatype='real' name='[Calculation_3277002074579259392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Monetary]' />
      </column>
      <column caption='Customer Segment Count' datatype='integer' name='[Calculation_3277002074579537921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([RFM_Scores_Segments])' />
      </column>
      <column caption='Total Monetary' datatype='real' name='[Calculation_3277002074580185090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Monetary])' />
      </column>
      <column caption='Total Customers' datatype='integer' name='[Calculation_3277002074624626691]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([customer_id])' />
      </column>
      <column caption='Count Sales Channel Id' datatype='integer' name='[Calculation_4999910407467175936]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([sales_channel_id])' />
      </column>
      <column caption='Record' datatype='integer' name='[Calculation_4999910407469727745]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
      </column>
      <column caption='Sales per Year' datatype='string' name='[Calculation_5977684105962536961]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF YEAR([t_dat]) = 2018 THEN &apos;2018&apos; ELSEIF YEAR([t_dat]) = 2019 THEN &apos;2019&apos; ELSEIF YEAR([t_dat]) = 2020 THEN &apos;2020&apos; END' />
      </column>
      <column caption='Sales Current Year' datatype='real' name='[Calculation_5977684105962868739]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [price] END' />
      </column>
      <column caption='Down arrow sales' datatype='string' name='[Calculation_5977684105963999238]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▼&apos;,NULL)' />
      </column>
      <column caption='% change when negative Sales' datatype='real' name='[Calculation_5977684105965633544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]) THEN (SUM([Calculation_5977684105962868739])-SUM([Sales Current Year (copy)_5977684105963302916]))/SUM([Sales Current Year (copy)_5977684105963302916]) END' />
      </column>
      <column caption='Trans Current Year' datatype='date' name='[Calculation_5977684105965981705]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [t_dat] END' />
      </column>
      <column caption='% change when negative Trans' datatype='real' name='[Calculation_5977684105966473227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF count([Calculation_5977684105965981705])&lt;COUNT([Trans Current Year (copy)_5977684105966133258]) THEN (COUNT([Calculation_5977684105965981705])-COUNT([Trans Current Year (copy)_5977684105966133258]))/COUNT([Trans Current Year (copy)_5977684105966133258]) END' />
      </column>
      <column caption='% change when positive Sales' datatype='real' name='[Calculation_5977684105966895117]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Calculation_5977684105962868739])&gt;SUM([Sales Current Year (copy)_5977684105963302916]) THEN (SUM([Calculation_5977684105962868739])-SUM([Sales Current Year (copy)_5977684105963302916]))/SUM([Sales Current Year (copy)_5977684105963302916]) END' />
      </column>
      <column caption='% change when positive Trans' datatype='real' name='[Calculation_5977684105967194126]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF count([Calculation_5977684105965981705])&gt;COUNT([Trans Current Year (copy)_5977684105966133258]) THEN (COUNT([Calculation_5977684105965981705])-COUNT([Trans Current Year (copy)_5977684105966133258]))/COUNT([Trans Current Year (copy)_5977684105966133258]) END' />
      </column>
      <column caption='Up arrow sales' datatype='string' name='[Calculation_5977684105967497231]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&gt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▲&apos;,NULL)' />
      </column>
      <column caption='Up arrow trans' datatype='string' name='[Calculation_5977684105967591440]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IIF(count([Calculation_5977684105965981705])&gt;count([Trans Current Year (copy)_5977684105966133258]),&apos;▲&apos;,NULL)' />
      </column>
      <column caption='Total Sales' datatype='real' name='[Calculation_5977684105981947921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([price])' />
      </column>
      <column caption='Total Transactions' datatype='integer' name='[Calculation_5977684105982607378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6])' />
      </column>
      <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
      </column>
      <column caption='Percent of Group ' datatype='real' name='[Calculation_5977684105983709205]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5977684105983033363]/Total([Calculation_5977684105983033363])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Seasons' datatype='string' name='[Calculation_5977684105994219542]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (MONTH([t_dat]) &gt; 5 and MONTH([t_dat]) &lt;= 8) then &apos;Summer&apos;  &#10;ELSEIF (MONTH([t_dat]) &gt; 8 and MONTH([t_dat]) &lt;= 11) then &apos;Autumn&apos; &#10;ELSEIF (MONTH([t_dat]) = 12 or (MONTH([t_dat]) &gt;= 1 and MONTH([t_dat]) &lt;= 2)) then &apos;Winter&apos; &#10;ELSEIF (MONTH([t_dat]) &gt; 2 and MONTH([t_dat]) &lt;= 5) then &apos;Spring&apos;&#10;END' />
      </column>
      <column caption='Down arrow trans' datatype='string' name='[Down arrow sales (copy)_5977684105965350919]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▼&apos;,NULL)' />
      </column>
      <column caption='F Quartile' datatype='integer' name='[F_Quartile]' role='measure' type='quantitative' />
      <column caption='M Quartile' datatype='integer' name='[M_Quartile]' role='measure' type='quantitative' />
      <column caption='RFM Scores' datatype='integer' name='[RFM_Scores]' role='measure' type='quantitative' />
      <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
          <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
          <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
          <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
          <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
          <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
        </aliases>
      </column>
      <column caption='R Quartile' datatype='integer' name='[R_Quartile]' role='measure' type='quantitative' />
      <column caption='Sales Previous Year ' datatype='real' name='[Sales Current Year (copy)_5977684105963302916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [price] END' />
      </column>
      <column caption='Total Sum' datatype='real' name='[TotalSum]' role='measure' type='quantitative' />
      <column caption='Trans Previous  Year ' datatype='date' name='[Trans Current Year (copy)_5977684105966133258]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [t_dat] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='final_h&amp;m_dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='rfm_h&amp;m_dataset3.csv' datatype='table' name='[__tableau_internal_object_id__].[rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5]' role='measure' type='quantitative' />
      <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
      <column caption='Article Id' datatype='integer' name='[article_id]' role='dimension' type='ordinal' />
      <column caption='Club Member Status' datatype='string' name='[club_member_status]' role='dimension' type='nominal' />
      <column caption='Colour Group Code' datatype='real' name='[colour_group_code]' role='dimension' type='ordinal' />
      <column caption='Colour Group Name' datatype='string' name='[colour_group_name]' role='dimension' type='nominal' />
      <column caption='Customer Id (Rfm H&amp;M Dataset3.Csv)' datatype='integer' name='[customer_id (rfm_h&amp;m_dataset3.csv)]' role='dimension' type='ordinal' />
      <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column caption='Department Name' datatype='string' name='[department_name]' role='dimension' type='nominal' />
      <column caption='Department No' datatype='real' name='[department_no]' role='measure' type='quantitative' />
      <column caption='Detail Desc' datatype='string' name='[detail_desc]' role='dimension' type='nominal' />
      <column caption='Fashion News Frequency' datatype='string' name='[fashion_news_frequency]' role='dimension' type='nominal' />
      <column caption='Garment Group Name' datatype='string' name='[garment_group_name]' role='dimension' type='nominal' />
      <column caption='Garment Group No' datatype='real' name='[garment_group_no]' role='measure' type='quantitative' />
      <column caption='Graphical Appearance Name' datatype='string' name='[graphical_appearance_name]' role='dimension' type='nominal' />
      <column caption='Graphical Appearance No' datatype='real' name='[graphical_appearance_no]' role='measure' type='quantitative' />
      <column caption='Index Code' datatype='string' name='[index_code]' role='dimension' type='nominal' />
      <column caption='Index Group Name' datatype='string' name='[index_group_name]' role='dimension' type='nominal' />
      <column caption='Index Group No' datatype='real' name='[index_group_no]' role='measure' type='quantitative' />
      <column caption='Index Name' datatype='string' name='[index_name]' role='dimension' type='nominal' />
      <column caption='Perceived Colour Master Id' datatype='real' name='[perceived_colour_master_id]' role='dimension' type='ordinal' />
      <column caption='Perceived Colour Master Name' datatype='string' name='[perceived_colour_master_name]' role='dimension' type='nominal' />
      <column caption='Perceived Colour Value Id' datatype='real' name='[perceived_colour_value_id]' role='dimension' type='ordinal' />
      <column caption='Perceived Colour Value Name' datatype='string' name='[perceived_colour_value_name]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Prod Name' datatype='string' name='[prod_name]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='integer' name='[product_code]' role='dimension' type='ordinal' />
      <column caption='Product Group Name' datatype='string' name='[product_group_name]' role='dimension' type='nominal' />
      <column caption='Product Type Name' datatype='string' name='[product_type_name]' role='dimension' type='nominal' />
      <column caption='Product Type No' datatype='real' name='[product_type_no]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Sales Channel Id' datatype='real' name='[sales_channel_id]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='Offline' />
          <alias key='2.0' value='Online' />
        </aliases>
      </column>
      <column caption='Section Name' datatype='string' name='[section_name]' role='dimension' type='nominal' />
      <column caption='Section No' datatype='real' name='[section_no]' role='measure' type='quantitative' />
      <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5977684105965981705]' derivation='Count' name='[cnt:Calculation_5977684105965981705:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trans Current Year (copy)_5977684105966133258]' derivation='Count' name='[cnt:Trans Current Year (copy)_5977684105966133258:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sales_channel_id]' derivation='CountD' name='[ctd:sales_channel_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5977684105962385408]' derivation='None' name='[none:Calculation_5977684105962385408:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5977684105994219542]' derivation='None' name='[none:Calculation_5977684105994219542:nk]' pivot='key' type='nominal' />
      <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
      <column-instance column='[colour_group_name]' derivation='None' name='[none:colour_group_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[graphical_appearance_name]' derivation='None' name='[none:graphical_appearance_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[index_group_name]' derivation='None' name='[none:index_group_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_type_name]' derivation='None' name='[none:product_type_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[sales_channel_id]' derivation='None' name='[none:sales_channel_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[pcto:usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[pcto:usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_5977684105962868739]' derivation='Sum' name='[sum:Calculation_5977684105962868739:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales Current Year (copy)_5977684105963302916]' derivation='Sum' name='[sum:Sales Current Year (copy)_5977684105963302916:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Product Type Name,Seasons)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:product_type_name:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_5977684105994219542:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Product Type Name,Transaction per Year)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:product_type_name:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_5977684105962385408:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_5977684105962385408:nk]' palette='red_10_0' type='palette'>
            <map to='#fcfff2'>
              <bucket>&quot;CurrentYear&quot;</bucket>
            </map>
            <map to='#fd001d'>
              <bucket>&quot;PreviousYear&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:graphical_appearance_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Denim&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Transparent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neps&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chambray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sequin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glittering/Metallic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Treatment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Check&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slub&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Metallic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;All over pattern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other pattern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colour blocking&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hologram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacquard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mixed solid/pattern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Embroidery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Contrast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stripe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Application/3D&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other structure&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Front print&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argyle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Placement print&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:colour_group_name:nk]' type='palette'>
            <map to='#000080'>
              <bucket>&quot;Dark Blue&quot;</bucket>
            </map>
            <map to='#0b091b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#243ae7'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#66ccff'>
              <bucket>&quot;Light Blue&quot;</bucket>
            </map>
            <map to='#b3b3b3'>
              <bucket>&quot;Grey&quot;</bucket>
            </map>
            <map to='#e5ae6c'>
              <bucket>&quot;Beige&quot;</bucket>
            </map>
            <map to='#ecd2a8'>
              <bucket>&quot;Light Beige&quot;</bucket>
            </map>
            <map to='#f0fecf'>
              <bucket>&quot;Off White&quot;</bucket>
            </map>
            <map to='#fafafa'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Light Pink&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5977684105994219542:nk]' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[__tableau_internal_object_id__].[cnt:final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_5977684105983033363:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Trans Current Year (copy)_5977684105966133258:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Calculation_5977684105965981705:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_5977684105962868739:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074579537921:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[ctd:sales_channel_id:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:index_group_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Baby/Children&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sport&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Menswear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ladieswear&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Divided&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sales_channel_id:ok]' palette='traffic_light_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>1.0</bucket>
            </map>
            <map to='#e39802'>
              <bucket>2.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RFM_Scores_Segments:nk]' palette='sf_watermelon' type='palette'>
            <map to='#5c3f22'>
              <bucket>&quot;6-Lost Cheap Customers&quot;</bucket>
            </map>
            <map to='#c11c2f'>
              <bucket>&quot;5-Lost Customers&quot;</bucket>
            </map>
            <map to='#e05255'>
              <bucket>&quot;2-Loyal_Customers&quot;</bucket>
            </map>
            <map to='#f4284e'>
              <bucket>&quot;3-Big Spenders&quot;</bucket>
            </map>
            <map to='#f56580'>
              <bucket>&quot;1-Best_Customers&quot;</bucket>
            </map>
            <map to='#f598a7'>
              <bucket>&quot;4-Almost Lost&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Age (group)]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;71+&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;61-70&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;51-60&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;41-50&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;31-40&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;21-30&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;0-20&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:product_type_name:nk]' palette='red_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beanie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eyeglasses&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jumpsuit/Playsuit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sandals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shoulder bag&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cardigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hairband&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Outdoor Waistcoat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Underwear set&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Backpack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garment Set&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heeled sandals&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pyjama jumpsuit/playsuit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swimwear top&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bodysuit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boots&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Long John&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slippers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tote bag&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Underwear body&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Felt hat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kids Underwear top&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sarong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Side table&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baby Bib&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dungarees&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pyjama set&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sewing kit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Underwear Tights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cap&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hair ties&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Outdoor overall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Straw hat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wireless earphone case&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accessories set&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bumbag&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hat/beanie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Polo shirt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swimsuit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waterbottle&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Vest top&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Braces&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hair clip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keychain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other accessories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Socks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cross-body bag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Earring&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hoodie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ring&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tailored Waistcoat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flip flop&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Necklace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Skirt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Underwear bottom&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Trousers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bootie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bra extender&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Giftbox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Night gown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Underwear corset&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Weekend/Gym bag&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bucket hat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hair string&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other shoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Soft Toys&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washing bag&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Top&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cap/peaked&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hair/alice band&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Outdoor trousers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunglasses&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zipper head&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flat shoe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leg warmers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scarf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sleeping sack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Umbrella&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;T-shirt&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Sweater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ballerinas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dog wear&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Earrings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacket&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Robe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costumes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hat/brim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marker pen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pumps&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swimwear bottom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wedge&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Shorts&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Dress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bracelet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fine cosmetics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gloves&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nipple covers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sneakers&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Bra&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Blouse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blazer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flat shoes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leggings/Tights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shirt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stain remover spray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Underdress&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice band&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dog Wear&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Headband&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mobile case&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pyjama bottom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swimwear set&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Bikini top&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
          <calculation class='tableau' formula='&quot;Total Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='final_h&amp;m_dataset.csv' id='final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6'>
            <properties context=''>
              <relation connection='textscan.1iydehp0drnvnr19hoq1g1pag99j' name='final_h&amp;m_dataset.csv' table='[final_h&amp;m_dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='customer_id' ordinal='0' />
                  <column datatype='string' name='club_member_status' ordinal='1' />
                  <column datatype='string' name='fashion_news_frequency' ordinal='2' />
                  <column datatype='real' name='age' ordinal='3' />
                  <column datatype='string' name='postal_code' ordinal='4' />
                  <column datatype='date' name='t_dat' ordinal='5' />
                  <column datatype='integer' name='article_id' ordinal='6' />
                  <column datatype='real' name='price' ordinal='7' />
                  <column datatype='real' name='sales_channel_id' ordinal='8' />
                  <column datatype='integer' name='product_code' ordinal='9' />
                  <column datatype='string' name='prod_name' ordinal='10' />
                  <column datatype='real' name='product_type_no' ordinal='11' />
                  <column datatype='string' name='product_type_name' ordinal='12' />
                  <column datatype='string' name='product_group_name' ordinal='13' />
                  <column datatype='real' name='graphical_appearance_no' ordinal='14' />
                  <column datatype='string' name='graphical_appearance_name' ordinal='15' />
                  <column datatype='real' name='colour_group_code' ordinal='16' />
                  <column datatype='string' name='colour_group_name' ordinal='17' />
                  <column datatype='real' name='perceived_colour_value_id' ordinal='18' />
                  <column datatype='string' name='perceived_colour_value_name' ordinal='19' />
                  <column datatype='real' name='perceived_colour_master_id' ordinal='20' />
                  <column datatype='string' name='perceived_colour_master_name' ordinal='21' />
                  <column datatype='real' name='department_no' ordinal='22' />
                  <column datatype='string' name='department_name' ordinal='23' />
                  <column datatype='string' name='index_code' ordinal='24' />
                  <column datatype='string' name='index_name' ordinal='25' />
                  <column datatype='real' name='index_group_no' ordinal='26' />
                  <column datatype='string' name='index_group_name' ordinal='27' />
                  <column datatype='real' name='section_no' ordinal='28' />
                  <column datatype='string' name='section_name' ordinal='29' />
                  <column datatype='real' name='garment_group_no' ordinal='30' />
                  <column datatype='string' name='garment_group_name' ordinal='31' />
                  <column datatype='string' name='detail_desc' ordinal='32' />
                  <column datatype='integer' name='Quantity' ordinal='33' />
                  <column datatype='real' name='TotalSum' ordinal='34' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='rfm_h&amp;m_dataset3.csv' id='rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5'>
            <properties context=''>
              <relation connection='textscan.1iydehp0drnvnr19hoq1g1pag99j' name='rfm_h&amp;m_dataset3.csv' table='[rfm_h&amp;m_dataset3#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='customer_id' ordinal='1' />
                  <column datatype='integer' name='Recency' ordinal='2' />
                  <column datatype='integer' name='Frequency' ordinal='3' />
                  <column datatype='real' name='Monetary' ordinal='4' />
                  <column datatype='integer' name='R_Quartile' ordinal='5' />
                  <column datatype='integer' name='F_Quartile' ordinal='6' />
                  <column datatype='integer' name='M_Quartile' ordinal='7' />
                  <column datatype='integer' name='RFM_Scores' ordinal='8' />
                  <column datatype='string' name='RFM_Scores_Segments' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_id]' />
              <expression op='[customer_id (rfm_h&amp;m_dataset3.csv)]' />
            </expression>
            <first-end-point object-id='final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6' />
            <second-end-point object-id='rfm_h&amp;m_dataset3.csv_C92E99C4D3A64C06AB5707C533F861F5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age distribution of loyal customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[age]' new-bin='true'>
                <bin default-name='false' value='&quot;0-20&quot;'>
                  <value>16.0</value>
                  <value>17.0</value>
                  <value>18.0</value>
                  <value>19.0</value>
                  <value>20.0</value>
                </bin>
                <bin default-name='false' value='&quot;21-30&quot;'>
                  <value>21.0</value>
                  <value>22.0</value>
                  <value>23.0</value>
                  <value>24.0</value>
                  <value>25.0</value>
                  <value>26.0</value>
                  <value>27.0</value>
                  <value>28.0</value>
                  <value>29.0</value>
                  <value>30.0</value>
                </bin>
                <bin default-name='false' value='&quot;31-40&quot;'>
                  <value>31.0</value>
                  <value>32.0</value>
                  <value>33.0</value>
                  <value>34.0</value>
                  <value>35.0</value>
                  <value>36.0</value>
                  <value>37.0</value>
                  <value>38.0</value>
                  <value>39.0</value>
                  <value>40.0</value>
                </bin>
                <bin default-name='false' value='&quot;41-50&quot;'>
                  <value>41.0</value>
                  <value>42.0</value>
                  <value>43.0</value>
                  <value>44.0</value>
                  <value>45.0</value>
                  <value>46.0</value>
                  <value>47.0</value>
                  <value>48.0</value>
                  <value>49.0</value>
                  <value>50.0</value>
                </bin>
                <bin default-name='false' value='&quot;51-60&quot;'>
                  <value>51.0</value>
                  <value>52.0</value>
                  <value>53.0</value>
                  <value>54.0</value>
                  <value>55.0</value>
                  <value>56.0</value>
                  <value>57.0</value>
                  <value>58.0</value>
                  <value>59.0</value>
                  <value>60.0</value>
                </bin>
                <bin default-name='false' value='&quot;61-70&quot;'>
                  <value>61.0</value>
                  <value>62.0</value>
                  <value>63.0</value>
                  <value>64.0</value>
                  <value>65.0</value>
                  <value>66.0</value>
                  <value>67.0</value>
                  <value>68.0</value>
                  <value>69.0</value>
                  <value>70.0</value>
                </bin>
                <bin default-name='false' value='&quot;71+&quot;'>
                  <value>71.0</value>
                  <value>72.0</value>
                  <value>73.0</value>
                  <value>74.0</value>
                  <value>75.0</value>
                  <value>76.0</value>
                  <value>77.0</value>
                  <value>78.0</value>
                  <value>79.0</value>
                  <value>80.0</value>
                  <value>81.0</value>
                  <value>82.0</value>
                  <value>83.0</value>
                  <value>84.0</value>
                  <value>85.0</value>
                  <value>86.0</value>
                  <value>87.0</value>
                  <value>88.0</value>
                  <value>89.0</value>
                  <value>90.0</value>
                  <value>91.0</value>
                  <value>92.0</value>
                  <value>98.0</value>
                  <value>99.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Segment Count' datatype='integer' name='[Calculation_3277002074579537921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([RFM_Scores_Segments])' />
            </column>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Age (group)]' />
              <groupfilter function='member' level='[Age (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;1-Best_Customers&quot;' />
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;2-Loyal_Customers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</column>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]</cols>
      </table>
      <simple-id uuid='{5591B6B7-EB37-4FDE-A06F-E82FD496F575}' />
    </worksheet>
    <worksheet name='Average Recency'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column datatype='integer' name='[Recency]' role='measure' type='quantitative' />
            <column-instance column='[Recency]' derivation='Avg' name='[avg:Recency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Recency:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Recency:qk]</cols>
      </table>
      <simple-id uuid='{77C05B5F-FE10-48DC-BD52-4BD7E060F3C5}' />
    </worksheet>
    <worksheet name='Avg Frequency'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column datatype='integer' name='[Frequency]' role='measure' type='quantitative' />
            <column-instance column='[Frequency]' derivation='Avg' name='[avg:Frequency:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Frequency:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='20'>Avg Frequency</run>
                <run>Æ&#10;&#10;</run>
                <run fontname='Palatino' fontsize='14'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Frequency:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FFF6C9BC-562E-49E3-9BAF-911FF83986E6}' />
    </worksheet>
    <worksheet name='Avg Monetary'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column datatype='real' name='[Monetary]' role='measure' type='quantitative' />
            <column-instance column='[Monetary]' derivation='Avg' name='[avg:Monetary:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Monetary:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='20'>Avg Monetary</run>
                <run>Æ&#10;&#10;</run>
                <run fontname='Palatino' fontsize='14'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Monetary:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AB82AADB-CF7E-4A39-97E5-11C14D274E6B}' />
    </worksheet>
    <worksheet name='Avg Recency'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column datatype='integer' name='[Recency]' role='measure' type='quantitative' />
            <column-instance column='[Recency]' derivation='Avg' name='[avg:Recency:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Recency:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='20'>Avg Recency</run>
                <run>Æ&#10;&#10;</run>
                <run fontname='Palatino' fontsize='14'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:Recency:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4A668B19-A99E-4A2A-916E-5D42144B2D07}' />
    </worksheet>
    <worksheet name='Channel ID'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105962385408]' derivation='None' name='[none:Calculation_5977684105962385408:nk]' pivot='key' type='nominal' />
            <column-instance column='[sales_channel_id]' derivation='None' name='[none:sales_channel_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[pcto:usr:Calculation_5977684105983033363:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105962385408:nk]' />
                <order field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[pcto:usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Sales Channel Id' datatype='real' name='[sales_channel_id]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Offline' />
                <alias key='2.0' value='Online' />
              </aliases>
            </column>
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[t_dat]' derivation='Year' name='[yr:t_dat:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[yr:t_dat:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:t_dat:ok]' />
              <groupfilter function='member' level='[yr:t_dat:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[yr:t_dat:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105962385408:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_5977684105983033363:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_5977684105983033363:qk:1]</cols>
      </table>
      <simple-id uuid='{A984DBDF-D38A-40E0-9CD6-0A65AB8154EC}' />
    </worksheet>
    <worksheet name='Current Year Sales vs Previous Year Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Year Sales vs Previous Year Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Sales Current Year' datatype='real' name='[Calculation_5977684105962868739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [price] END' />
            </column>
            <column caption='Sales Previous Year ' datatype='real' name='[Sales Current Year (copy)_5977684105963302916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [price] END' />
            </column>
            <column-instance column='[t_dat]' derivation='Month' name='[mn:t_dat:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5977684105962868739]' derivation='Sum' name='[sum:Calculation_5977684105962868739:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Current Year (copy)_5977684105963302916]' derivation='Sum' name='[sum:Sales Current Year (copy)_5977684105963302916:qk]' pivot='key' type='quantitative' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[t_dat]' derivation='Week' name='[wk:t_dat:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[wk:t_dat:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[wk:t_dat:ok]' />
              <groupfilter function='member' level='[wk:t_dat:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[wk:t_dat:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_5977684105962868739:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_5977684105962868739:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_5977684105962868739:qk] + [federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk])</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[mn:t_dat:ok]</cols>
      </table>
      <simple-id uuid='{64BEA1B5-34A8-47A1-A898-27B21F22DAFE}' />
    </worksheet>
    <worksheet name='Customer Segmentation'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Customer Segment Count' datatype='integer' name='[Calculation_3277002074579537921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([RFM_Scores_Segments])' />
            </column>
            <column caption='Total Customers' datatype='integer' name='[Calculation_3277002074624626691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([customer_id])' />
            </column>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3277002074624626691]' derivation='User' name='[pcto:usr:Calculation_3277002074624626691:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_3277002074624626691]' derivation='User' name='[pcto:usr:Calculation_3277002074624626691:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' num-steps='12' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#efdddd</color>
                <color>#edc9ca</color>
                <color>#ecb6b8</color>
                <color>#eaa3a5</color>
                <color>#e99093</color>
                <color>#e77e81</color>
                <color>#e56c6f</color>
                <color>#e45a5e</color>
                <color>#e2484d</color>
                <color>#e1373c</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk:1]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk:2]' />
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='10'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk:2]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='8' italic='true'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DBF32D26-1CA6-4A02-8C5C-0D2658CD3FA8}' />
    </worksheet>
    <worksheet name='LOckdown channel id'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lockdown vs Sales Channel ID </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Covid Parameter' datatype='datetime' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-16 14:35:30#'>
              <calculation class='tableau' formula='#2020-03-16 14:35:30#' />
            </column>
            <column caption='Covid End Parameter' datatype='datetime' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2020-05-04 14:35:47#'>
              <calculation class='tableau' formula='#2020-05-04 14:35:47#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <_.fcp.ObjectModelTableType.false...column caption='final_h&amp;m_dataset.csv' datatype='integer' name='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' role='measure' type='quantitative' />
            <column caption='Total Transactions' datatype='integer' name='[Calculation_5977684105982607378]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6])' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='final_h&amp;m_dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' role='measure' type='quantitative' />
            <column-instance column='[t_dat]' derivation='Day' name='[dy:t_dat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_channel_id]' derivation='None' name='[none:sales_channel_id:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Sales Channel Id' datatype='real' name='[sales_channel_id]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Offline' />
                <alias key='2.0' value='Online' />
              </aliases>
            </column>
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[t_dat]' derivation='Day-Trunc' name='[tdy:t_dat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105982607378]' derivation='User' name='[usr:Calculation_5977684105982607378:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[dy:t_dat:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[dy:t_dat:ok]' />
              <groupfilter function='member' level='[dy:t_dat:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[dy:t_dat:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[tdy:t_dat:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='background-color' id='refline6' value='#ffffff4b' />
            <format attr='text-orientation' id='refline6' value='-90' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='auto' />
            <format attr='font-family' id='refline6' value='Tableau Semibold' />
            <format attr='font-size' id='refline6' value='14' />
            <format attr='color' id='refline6' value='#1b1b1b' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline6' value='#f5eddc' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' />
            </encodings>
            <reference-line axis-column='[federated.19bcibn0s49ltq19trvq7062mv6e].[tdy:t_dat:qk]' enable-instant-analytics='true' formula='min' id='refline6' label='Covid Lockdown' label-type='custom' paired-id='refline8' scope='per-table' symmetric='false' tooltip='Covid Lockdown' tooltip-type='custom' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <reference-line axis-column='[federated.19bcibn0s49ltq19trvq7062mv6e].[tdy:t_dat:qk]' enable-instant-analytics='true' formula='max' id='refline8' label-type='none' paired-id='refline6' scope='per-table' symmetric='false' tooltip-type='none' value-column='[Parameters].[Parameter 3]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105982607378:qk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[tdy:t_dat:qk]</cols>
      </table>
      <simple-id uuid='{4B3C04E1-5724-48D8-8DAE-183A10A85F60}' />
    </worksheet>
    <worksheet name='Revenue Seg 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Revenue' datatype='real' name='[Calculation_3277002074579259392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Monetary]' />
            </column>
            <column caption='Total Customers' datatype='integer' name='[Calculation_3277002074624626691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([customer_id])' />
            </column>
            <column datatype='real' name='[Monetary]' role='measure' type='quantitative' />
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3277002074579259392]' derivation='Sum' name='[pcto:sum:Calculation_3277002074579259392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_3277002074624626691]' derivation='User' name='[pcto:usr:Calculation_3277002074624626691:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:sum:Calculation_3277002074579259392:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk]&quot;</bucket>
              <bucket>&quot;[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:sum:Calculation_3277002074579259392:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1-Best_Customers&quot;</bucket>
              <bucket>&quot;2-Loyal_Customers&quot;</bucket>
              <bucket>&quot;4-Almost Lost&quot;</bucket>
              <bucket>&quot;5-Lost Customers&quot;</bucket>
              <bucket>&quot;3-Big Spenders&quot;</bucket>
              <bucket>&quot;6-Lost Cheap Customers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' value='125' />
            <format attr='height' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' value='25' />
            <format attr='font-weight' data-class='subtotal' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[Multiple Values]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.19bcibn0s49ltq19trvq7062mv6e].[Multiple Values]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
                <format attr='size' value='1.9670165777206421' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D9118B7A-758B-45A9-AF1C-560950868DE7}' />
    </worksheet>
    <worksheet name='Revenue per Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Revenue' datatype='real' name='[Calculation_3277002074579259392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Monetary]' />
            </column>
            <column datatype='real' name='[Monetary]' role='measure' type='quantitative' />
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3277002074579259392]' derivation='Sum' name='[sum:Calculation_3277002074579259392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' />
              <size column='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_3277002074579259392:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9670165777206421' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D3524270-3E99-4E06-88C2-8FF6830ED8E5}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column-instance column='[product_type_name]' derivation='Count' name='[cnt:product_type_name:qk]' pivot='key' type='quantitative' />
            <column caption='Product Type Name' datatype='string' name='[product_type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:product_type_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90664F1A-0D73-415B-A7A6-310169AF61A2}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[age]' new-bin='true'>
                <bin default-name='false' value='&quot;0-20&quot;'>
                  <value>16.0</value>
                  <value>17.0</value>
                  <value>18.0</value>
                  <value>19.0</value>
                  <value>20.0</value>
                </bin>
                <bin default-name='false' value='&quot;21-30&quot;'>
                  <value>21.0</value>
                  <value>22.0</value>
                  <value>23.0</value>
                  <value>24.0</value>
                  <value>25.0</value>
                  <value>26.0</value>
                  <value>27.0</value>
                  <value>28.0</value>
                  <value>29.0</value>
                  <value>30.0</value>
                </bin>
                <bin default-name='false' value='&quot;31-40&quot;'>
                  <value>31.0</value>
                  <value>32.0</value>
                  <value>33.0</value>
                  <value>34.0</value>
                  <value>35.0</value>
                  <value>36.0</value>
                  <value>37.0</value>
                  <value>38.0</value>
                  <value>39.0</value>
                  <value>40.0</value>
                </bin>
                <bin default-name='false' value='&quot;41-50&quot;'>
                  <value>41.0</value>
                  <value>42.0</value>
                  <value>43.0</value>
                  <value>44.0</value>
                  <value>45.0</value>
                  <value>46.0</value>
                  <value>47.0</value>
                  <value>48.0</value>
                  <value>49.0</value>
                  <value>50.0</value>
                </bin>
                <bin default-name='false' value='&quot;51-60&quot;'>
                  <value>51.0</value>
                  <value>52.0</value>
                  <value>53.0</value>
                  <value>54.0</value>
                  <value>55.0</value>
                  <value>56.0</value>
                  <value>57.0</value>
                  <value>58.0</value>
                  <value>59.0</value>
                  <value>60.0</value>
                </bin>
                <bin default-name='false' value='&quot;61-70&quot;'>
                  <value>61.0</value>
                  <value>62.0</value>
                  <value>63.0</value>
                  <value>64.0</value>
                  <value>65.0</value>
                  <value>66.0</value>
                  <value>67.0</value>
                  <value>68.0</value>
                  <value>69.0</value>
                  <value>70.0</value>
                </bin>
                <bin default-name='false' value='&quot;71+&quot;'>
                  <value>71.0</value>
                  <value>72.0</value>
                  <value>73.0</value>
                  <value>74.0</value>
                  <value>75.0</value>
                  <value>76.0</value>
                  <value>77.0</value>
                  <value>78.0</value>
                  <value>79.0</value>
                  <value>80.0</value>
                  <value>81.0</value>
                  <value>82.0</value>
                  <value>83.0</value>
                  <value>84.0</value>
                  <value>85.0</value>
                  <value>86.0</value>
                  <value>87.0</value>
                  <value>88.0</value>
                  <value>89.0</value>
                  <value>90.0</value>
                  <value>91.0</value>
                  <value>92.0</value>
                  <value>98.0</value>
                  <value>99.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Revenue' datatype='real' name='[Calculation_3277002074579259392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Monetary]' />
            </column>
            <column caption='Customer Segment Count' datatype='integer' name='[Calculation_3277002074579537921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([RFM_Scores_Segments])' />
            </column>
            <column datatype='real' name='[Monetary]' role='measure' type='quantitative' />
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3277002074579259392]' derivation='Sum' name='[sum:Calculation_3277002074579259392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Age (group)]' />
              <groupfilter function='member' level='[Age (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;1-Best_Customers&quot;' />
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;2-Loyal_Customers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]</column>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_3277002074579259392:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5274AECC-7A63-4696-8DA4-86B000D6CC28}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;1-Best_Customers&quot;' />
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;2-Loyal_Customers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:age:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:age:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:age:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{16E9B7E1-2E4D-4A6A-B7E5-8A42BADBDD67}' />
    </worksheet>
    <worksheet name='Sheet 25'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Count Sales Channel Id' datatype='integer' name='[Calculation_4999910407467175936]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([sales_channel_id])' />
            </column>
            <column-instance column='[sales_channel_id]' derivation='None' name='[none:sales_channel_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sales_channel_id]' derivation='Count' name='[pcto:cnt:sales_channel_id:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4999910407467175936]' derivation='User' name='[pcto:usr:Calculation_4999910407467175936:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Sales Channel Id' datatype='real' name='[sales_channel_id]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Offline' />
                <alias key='2.0' value='Online' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sales_channel_id:ok]' />
              <groupfilter function='member' level='[none:sales_channel_id:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:cnt:sales_channel_id:qk:1]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_4999910407467175936:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:cnt:sales_channel_id:qk:1]</cols>
      </table>
      <simple-id uuid='{B470AC47-32BA-4BAA-A550-0913A48941DA}' />
    </worksheet>
    <worksheet name='Top 10 Favorite Colors'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Favorite Colors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Article Id' datatype='integer' name='[article_id]' role='dimension' type='ordinal' />
            <column-instance column='[article_id]' derivation='Count' name='[cnt:article_id:qk]' pivot='key' type='quantitative' />
            <column caption='Colour Group Name' datatype='string' name='[colour_group_name]' role='dimension' type='nominal' />
            <column-instance column='[colour_group_name]' derivation='None' name='[none:colour_group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[article_id]' derivation='Count' name='[pcto:cnt:article_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:colour_group_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Beige&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Black&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Blue&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Dark Blue&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Grey&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Light Beige&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Light Blue&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Light Pink&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;Off White&quot;' />
              <groupfilter function='member' level='[none:colour_group_name:nk]' member='&quot;White&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:colour_group_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:colour_group_name:nk]' />
              <size column='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:article_id:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:colour_group_name:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:cnt:article_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D1972103-51BB-46BF-8210-B0A4E49970E2}' />
    </worksheet>
    <worksheet name='Top 10 Product Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Product Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='Percent of Group ' datatype='real' name='[Calculation_5977684105983709205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5977684105983033363]/Total([Calculation_5977684105983033363])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[product_group_name]' derivation='Attribute' name='[attr:product_group_name:nk]' pivot='key' type='nominal' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[product_group_name]' derivation='None' name='[none:product_group_name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product Group Name' datatype='string' name='[product_group_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105983709205]' derivation='User' name='[usr:Calculation_5977684105983709205:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_group_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:product_group_name:nk]' member='&quot;Accessories&quot;' />
              <groupfilter from='&quot;Garment Full body&quot;' function='range' level='[none:product_group_name:nk]' to='&quot;Garment Upper body&quot;' />
              <groupfilter from='&quot;Nightwear&quot;' function='range' level='[none:product_group_name:nk]' to='&quot;Socks &amp; Tights&quot;' />
              <groupfilter function='member' level='[none:product_group_name:nk]' member='&quot;Swimwear&quot;' />
              <groupfilter function='member' level='[none:product_group_name:nk]' member='&quot;Underwear&quot;' />
              <groupfilter function='member' level='[none:product_group_name:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_group_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_group_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' value='' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_group_name:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[attr:product_group_name:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run> &lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[attr:product_group_name:nk]</run>
                <run>&gt;  &lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]</run>
                <run>&gt;  (&lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]</run>
                <run>&gt;)</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_group_name:nk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]</cols>
      </table>
      <simple-id uuid='{C1A1FC11-E72B-4FD1-BB0A-E104A2FF1B45}' />
    </worksheet>
    <worksheet name='Top 10 Products (By Revenue)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Products (By Revenue)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='Percent of Group ' datatype='real' name='[Calculation_5977684105983709205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5977684105983033363]/Total([Calculation_5977684105983033363])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sales Previous Year ' datatype='real' name='[Sales Current Year (copy)_5977684105963302916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [price] END' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105962385408]' derivation='None' name='[none:Calculation_5977684105962385408:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_type_name]' derivation='None' name='[none:product_type_name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product Type Name' datatype='string' name='[product_type_name]' role='dimension' type='nominal' />
            <column-instance column='[Sales Current Year (copy)_5977684105963302916]' derivation='Sum' name='[sum:Sales Current Year (copy)_5977684105963302916:qk]' pivot='key' type='quantitative' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105983709205]' derivation='User' name='[usr:Calculation_5977684105983709205:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Inclusions (Product Type Name,Transaction per Year)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_5977684105962385408:nk]' member='&quot;CurrentYear&quot;' />
                  <groupfilter function='member' level='[none:Calculation_5977684105962385408:nk]' member='&quot;PreviousYear&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bikini top&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Blouse&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bra&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Dress&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Shorts&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Sweater&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Swimwear bottom&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;T-shirt&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Top&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Trousers&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Underwear bottom&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Vest top&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:product_type_name:nk]' />
                <hierarchy name='[none:Calculation_5977684105962385408:nk]' />
              </order>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[Inclusions (Product Type Name,Transaction per Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' value='' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run> &lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</run>
                <run>&gt; &lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]</run>
                <run>&gt;  (&lt;</run>
                <run>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983709205:qk]</run>
                <run>&gt;)</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ed0031' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</rows>
        <cols>([federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105962385408:nk] * [federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk])</cols>
      </table>
      <simple-id uuid='{E128CF38-211D-46A5-8622-BDBFB2CF87BF}' />
    </worksheet>
    <worksheet name='Top Products of loyal customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_type_name]' derivation='None' name='[none:product_type_name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product Type Name' datatype='string' name='[product_type_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;1-Best_Customers&quot;' />
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;2-Loyal_Customers&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bikini top&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bra&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Shorts&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Sweater&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;T-shirt&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Top&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Trousers&quot;' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Vest top&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</column>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</cols>
      </table>
      <simple-id uuid='{B62EDCF6-83AD-4AF8-A455-1782D5535D2E}' />
    </worksheet>
    <worksheet name='Top Products per Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Products per Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Sales per Year' datatype='string' name='[Calculation_5977684105962536961]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF YEAR([t_dat]) = 2018 THEN &apos;2018&apos; ELSEIF YEAR([t_dat]) = 2019 THEN &apos;2019&apos; ELSEIF YEAR([t_dat]) = 2020 THEN &apos;2020&apos; END' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='Seasons' datatype='string' name='[Calculation_5977684105994219542]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (MONTH([t_dat]) &gt; 5 and MONTH([t_dat]) &lt;= 8) then &apos;Summer&apos;  &#10;ELSEIF (MONTH([t_dat]) &gt; 8 and MONTH([t_dat]) &lt;= 11) then &apos;Autumn&apos; &#10;ELSEIF (MONTH([t_dat]) = 12 or (MONTH([t_dat]) &gt;= 1 and MONTH([t_dat]) &lt;= 2)) then &apos;Winter&apos; &#10;ELSEIF (MONTH([t_dat]) &gt; 2 and MONTH([t_dat]) &lt;= 5) then &apos;Spring&apos;&#10;END' />
            </column>
            <column-instance column='[Calculation_5977684105962536961]' derivation='Count' name='[cnt:Calculation_5977684105962536961:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105994219542]' derivation='None' name='[none:Calculation_5977684105994219542:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_type_name]' derivation='None' name='[none:product_type_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[pcto:usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product Type Name' datatype='string' name='[product_type_name]' role='dimension' type='nominal' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[Inclusions (Product Type Name,Seasons)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_5977684105994219542:nk]' member='&quot;Autumn&quot;' />
                  <groupfilter function='member' level='[none:Calculation_5977684105994219542:nk]' member='&quot;Spring&quot;' />
                  <groupfilter function='member' level='[none:Calculation_5977684105994219542:nk]' member='&quot;Summer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_5977684105994219542:nk]' member='&quot;Winter&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bag&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Belt&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bikini top&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Blazer&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Blouse&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Boots&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Bra&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Cardigan&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Dress&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Earring&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Hoodie&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Jacket&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Jumpsuit/Playsuit&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Leggings/Tights&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Pyjama set&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Scarf&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Shirt&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Shorts&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Skirt&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Socks&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Sweater&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Swimsuit&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Swimwear bottom&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;T-shirt&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Top&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Trousers&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Underwear bottom&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Underwear Tights&quot;' />
                  <groupfilter function='member' level='[none:product_type_name:nk]' member='&quot;Vest top&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:product_type_name:nk]' />
                <hierarchy name='[none:Calculation_5977684105994219542:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:product_type_name:nk]' />
              <groupfilter function='member' level='[none:product_type_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105994219542:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Calculation_5977684105962536961:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' member-value='%null%' />
              </sort-filter-info>
            </shelf-sort-v2>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105994219542:nk]' member-value='&quot;Autumn&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</column>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[Inclusions (Product Type Name,Seasons)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105994219542:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_5977684105983033363:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]</rows>
        <cols>([federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105994219542:nk] * [federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk])</cols>
      </table>
      <simple-id uuid='{5709E427-3AA8-473D-84E5-F0342CC15085}' />
    </worksheet>
    <worksheet name='Total Cust by channel ID'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Total Customers' datatype='integer' name='[Calculation_3277002074624626691]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([customer_id])' />
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column-instance column='[sales_channel_id]' derivation='None' name='[none:sales_channel_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3277002074624626691]' derivation='User' name='[pcto:usr:Calculation_3277002074624626691:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Sales Channel Id' datatype='real' name='[sales_channel_id]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='Offline' />
                <alias key='2.0' value='Online' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sales_channel_id:ok]' />
              <groupfilter function='member' level='[none:sales_channel_id:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[pcto:usr:Calculation_3277002074624626691:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{35CDAE76-679C-4862-8C53-98AA5C8628E4}' />
    </worksheet>
    <worksheet name='Total Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Sales Current Year' datatype='real' name='[Calculation_5977684105962868739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [price] END' />
            </column>
            <column caption='Down arrow sales' datatype='string' name='[Calculation_5977684105963999238]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▼&apos;,NULL)' />
            </column>
            <column caption='% change when negative Sales' datatype='real' name='[Calculation_5977684105965633544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]) THEN (SUM([Calculation_5977684105962868739])-SUM([Sales Current Year (copy)_5977684105963302916]))/SUM([Sales Current Year (copy)_5977684105963302916]) END' />
            </column>
            <column caption='% change when positive Sales' datatype='real' name='[Calculation_5977684105966895117]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Calculation_5977684105962868739])&gt;SUM([Sales Current Year (copy)_5977684105963302916]) THEN (SUM([Calculation_5977684105962868739])-SUM([Sales Current Year (copy)_5977684105963302916]))/SUM([Sales Current Year (copy)_5977684105963302916]) END' />
            </column>
            <column caption='Up arrow sales' datatype='string' name='[Calculation_5977684105967497231]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&gt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▲&apos;,NULL)' />
            </column>
            <column caption='Sales Previous Year ' datatype='real' name='[Sales Current Year (copy)_5977684105963302916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [price] END' />
            </column>
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105963999238]' derivation='User' name='[usr:Calculation_5977684105963999238:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5977684105965633544]' derivation='User' name='[usr:Calculation_5977684105965633544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105966895117]' derivation='User' name='[usr:Calculation_5977684105966895117:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105967497231]' derivation='User' name='[usr:Calculation_5977684105967497231:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='257' />
            <format attr='height' value='288' />
            <format attr='text-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]' value='center' />
            <format attr='vertical-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='p0.00%' />
            <format attr='text-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='center' />
            <format attr='vertical-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='center' />
            <format attr='font-weight' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='normal' />
            <format attr='font-size' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='9' />
            <format attr='font-weight' data-class='subtotal' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='normal' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966895117:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]' value='center' />
            <format attr='vertical-align' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' value='p0.00%' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966895117:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966895117:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:price:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967497231:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontname='Tableau Light' fontsize='20'>T O T A L   S A L E S</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontname='Tableau Bold' fontsize='26'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:price:qk]>]]></run>
                <run bold='true' fontalignment='0' fontsize='20'>Æ  </run>
                <run fontalignment='0' fontcolor='#ff0000' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105963999238:nk]>]]></run>
                <run fontalignment='0' fontcolor='#4e79a7' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967497231:nk]>]]></run>
                <run fontalignment='0' fontsize='20'>Æ </run>
                <run fontalignment='0' fontcolor='#ff0000' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105965633544:qk]>]]></run>
                <run fontalignment='0' fontsize='20'>Æ </run>
                <run fontalignment='0' fontcolor='#4e79a7' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966895117:qk]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.9290008544921875' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F01A9F0B-6531-4B54-A68D-59E4D638254E}' />
    </worksheet>
    <worksheet name='Total Transactions'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Sales Current Year' datatype='real' name='[Calculation_5977684105962868739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [price] END' />
            </column>
            <column caption='Trans Current Year' datatype='date' name='[Calculation_5977684105965981705]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [t_dat] END' />
            </column>
            <column caption='% change when negative Trans' datatype='real' name='[Calculation_5977684105966473227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF count([Calculation_5977684105965981705])&lt;COUNT([Trans Current Year (copy)_5977684105966133258]) THEN (COUNT([Calculation_5977684105965981705])-COUNT([Trans Current Year (copy)_5977684105966133258]))/COUNT([Trans Current Year (copy)_5977684105966133258]) END' />
            </column>
            <column caption='% change when positive Trans' datatype='real' name='[Calculation_5977684105967194126]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF count([Calculation_5977684105965981705])&gt;COUNT([Trans Current Year (copy)_5977684105966133258]) THEN (COUNT([Calculation_5977684105965981705])-COUNT([Trans Current Year (copy)_5977684105966133258]))/COUNT([Trans Current Year (copy)_5977684105966133258]) END' />
            </column>
            <column caption='Up arrow trans' datatype='string' name='[Calculation_5977684105967591440]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IIF(count([Calculation_5977684105965981705])&gt;count([Trans Current Year (copy)_5977684105966133258]),&apos;▲&apos;,NULL)' />
            </column>
            <column caption='Down arrow trans' datatype='string' name='[Down arrow sales (copy)_5977684105965350919]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IIF(SUM([Calculation_5977684105962868739])&lt;SUM([Sales Current Year (copy)_5977684105963302916]),&apos;▼&apos;,NULL)' />
            </column>
            <column caption='Sales Previous Year ' datatype='real' name='[Sales Current Year (copy)_5977684105963302916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [price] END' />
            </column>
            <column caption='Trans Previous  Year ' datatype='date' name='[Trans Current Year (copy)_5977684105966133258]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [t_dat] END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='final_h&amp;m_dataset.csv' datatype='integer' name='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='final_h&amp;m_dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5977684105966473227]' derivation='User' name='[usr:Calculation_5977684105966473227:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105967194126]' derivation='User' name='[usr:Calculation_5977684105967194126:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105967591440]' derivation='User' name='[usr:Calculation_5977684105967591440:nk]' pivot='key' type='nominal' />
            <column-instance column='[Down arrow sales (copy)_5977684105965350919]' derivation='User' name='[usr:Down arrow sales (copy)_5977684105965350919:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='257' />
            <format attr='height' value='288' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966473227:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967194126:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966473227:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967194126:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Down arrow sales (copy)_5977684105965350919:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966473227:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967194126:qk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967591440:nk]' />
              <text column='[federated.19bcibn0s49ltq19trvq7062mv6e].[__tableau_internal_object_id__].[cnt:final_h&amp;m_dataset.csv_49F4799F91A844C5B6351D366691D0E6:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontname='Tableau Light' fontsize='20'>T O T A L  </run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontname='Tableau Light' fontsize='20'>T R A N S A C T I O N S</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontname='Tableau Bold' fontsize='26'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[__tableau_internal_object_id__].[cnt:final_h&m_dataset.csv_49F4799F91A844C5B6351D366691D0E6:qk]>]]></run>
                <run bold='true' fontalignment='0' fontsize='20'>Æ  </run>
                <run fontalignment='0' fontcolor='#ff0000' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Down arrow sales (copy)_5977684105965350919:nk]>]]></run>
                <run fontalignment='0' fontcolor='#4e79a7' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967591440:nk]>]]></run>
                <run fontalignment='0' fontsize='20'>Æ </run>
                <run fontalignment='0' fontcolor='#ff0000' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105966473227:qk]>]]></run>
                <run fontalignment='0' fontsize='20'>Æ </run>
                <run fontalignment='0' fontcolor='#4e79a7' fontsize='20'><![CDATA[<[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105967194126:qk]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.9290008544921875' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BA1DACFC-6BC9-42A1-BED2-C69E6FEB2B53}' />
    </worksheet>
    <worksheet name='Total number of transactions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total number of transactions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Transaction per Year' datatype='string' name='[Calculation_5977684105962385408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATE([t_dat]) &lt; DATE(&quot;2019-09-20&quot;) THEN &apos;PreviousYear&apos; ELSE &apos;CurrentYear&apos; END' />
            </column>
            <column caption='Trans Current Year' datatype='date' name='[Calculation_5977684105965981705]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;CurrentYear&apos; THEN [t_dat] END' />
            </column>
            <column caption='Trans Previous  Year ' datatype='date' name='[Trans Current Year (copy)_5977684105966133258]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Calculation_5977684105962385408] = &apos;PreviousYear&apos; THEN [t_dat] END' />
            </column>
            <column-instance column='[Calculation_5977684105965981705]' derivation='Count' name='[cnt:Calculation_5977684105965981705:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trans Current Year (copy)_5977684105966133258]' derivation='Count' name='[cnt:Trans Current Year (copy)_5977684105966133258:qk]' pivot='key' type='quantitative' />
            <column-instance column='[t_dat]' derivation='Month' name='[mn:t_dat:ok]' pivot='key' type='ordinal' />
            <column caption='T Dat' datatype='date' name='[t_dat]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[mn:t_dat:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:t_dat:ok]' />
              <groupfilter function='member' level='[mn:t_dat:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[mn:t_dat:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Trans Current Year (copy)_5977684105966133258:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Calculation_5977684105965981705:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Trans Current Year (copy)_5977684105966133258:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Trans Current Year (copy)_5977684105966133258:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Calculation_5977684105965981705:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Calculation_5977684105965981705:qk] + [federated.19bcibn0s49ltq19trvq7062mv6e].[cnt:Trans Current Year (copy)_5977684105966133258:qk])</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[mn:t_dat:ok]</cols>
      </table>
      <simple-id uuid='{261B82A0-049C-4756-ABD7-C9B9EBA65F7D}' />
    </worksheet>
    <worksheet name='Which department does loyal cust shops most'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
              <calculation class='tableau' formula='&quot;Total Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='Customer Segment Count' datatype='integer' name='[Calculation_3277002074579537921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([RFM_Scores_Segments])' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_5977684105983033363]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Sales&quot; THEN SUM([price])&#10;ELSE COUNT([customer_id])&#10;END' />
            </column>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
            <column caption='Department Name' datatype='string' name='[department_name]' role='dimension' type='nominal' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[department_name]' derivation='None' name='[none:department_name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3277002074579537921]' derivation='User' name='[usr:Calculation_3277002074579537921:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5977684105983033363]' derivation='User' name='[usr:Calculation_5977684105983033363:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;1-Best_Customers&quot;' />
              <groupfilter function='member' level='[none:RFM_Scores_Segments:nk]' member='&quot;2-Loyal_Customers&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:department_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Basic 1&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Blouse&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Casual Lingerie&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Denim Trousers&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Dress&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Dresses&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Expressive Lingerie&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Jersey Basic&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Jersey fancy&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Jewellery&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Knitwear&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Ladies Sport Bottoms&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Ladies Sport Bras&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Light Basic Jersey&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Nightwear&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Outwear&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Shorts&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Skirt&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Skirts&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Swimwear&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Tights basic&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Tops Fancy Jersey&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Tops Knitwear&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Tops Woven&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Trouser&quot;' />
              <groupfilter function='member' level='[none:department_name:nk]' member='&quot;Trousers&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:department_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:department_name:nk]</column>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk] + [federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_5977684105983033363:qk])</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:department_name:nk]</cols>
      </table>
      <simple-id uuid='{A57DBBC5-C862-4050-9884-0F9FDABE6E66}' />
    </worksheet>
    <worksheet name='loyal_cust'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_h&amp;m_dataset' name='federated.19bcibn0s49ltq19trvq7062mv6e' />
          </datasources>
          <datasource-dependencies datasource='federated.19bcibn0s49ltq19trvq7062mv6e'>
            <column caption='RFM Scores Segments' datatype='string' name='[RFM_Scores_Segments]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1-Best_Customers&quot;' value='Best_Customers' />
                <alias key='&quot;2-Loyal_Customers&quot;' value='Loyal_Customers' />
                <alias key='&quot;3-Big Spenders&quot;' value='Big Spenders' />
                <alias key='&quot;4-Almost Lost&quot;' value='Almost Lost' />
                <alias key='&quot;5-Lost Customers&quot;' value='Lost Customers' />
                <alias key='&quot;6-Lost Cheap Customers&quot;' value='Lost Thrifty Customers' />
              </aliases>
            </column>
            <column caption='Index Group Name' datatype='string' name='[index_group_name]' role='dimension' type='nominal' />
            <column-instance column='[RFM_Scores_Segments]' derivation='None' name='[none:RFM_Scores_Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_group_name]' derivation='None' name='[none:index_group_name:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:index_group_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:index_group_name:nk]' />
              <groupfilter function='member' level='[none:index_group_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:index_group_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19bcibn0s49ltq19trvq7062mv6e].[none:index_group_name:nk] / [federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk])</rows>
        <cols>[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:price:qk]</cols>
      </table>
      <simple-id uuid='{24738248-57EA-45BB-8B22-DC1F756C80DE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Customer Segmentation Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Trebuchet MS'>H&amp;M Customer Segmentation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3ebf3' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#fab6bf' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Measurement' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Sales&quot;'>
          <calculation class='tableau' formula='&quot;Total Sales&quot;' />
          <members>
            <member value='&quot;Total Sales&quot;' />
            <member value='&quot;Total Transactions&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97948' id='15' param='vert' type-v2='layout-flow' w='98698' x='651' y='1026'>
            <zone h='4616' id='16' type-v2='title' w='98698' x='651' y='1026'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93332' id='7' param='horz' type-v2='layout-flow' w='98698' x='651' y='5642'>
              <zone h='93332' id='5' type-v2='layout-basic' w='85679' x='651' y='5642'>
                <zone h='47427' id='3' name='Customer Segmentation' show-title='false' w='42835' x='651' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45905' id='9' name='Revenue per Segment' w='21415' x='651' y='53069'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39874' id='13' name='Revenue Seg 2' show-title='false' w='32130' x='22066' y='59100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45905' id='17' name='Age distribution of loyal customers' w='32134' x='54196' y='53069'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28075' id='19' name='Top Products of loyal customers' w='42844' x='43486' y='24994'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19352' id='22' name='Avg Recency' show-title='false' w='13352' x='72978' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19352' id='23' name='Avg Frequency' show-title='false' w='14270' x='43486' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19352' id='24' name='Avg Monetary' show-title='false' w='15222' x='57756' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6031' id='41' param='vert' type-v2='layout-flow' w='32130' x='22066' y='53069' />
              </zone>
              <zone fixed-size='160' h='93332' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='13019' x='86330' y='5642'>
                <zone h='21282' id='18' name='Age distribution of loyal customers' pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]' type-v2='color' w='13019' x='86330' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='10770' id='21' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13019' x='86330' y='26924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14103' id='11' name='Revenue per Segment' pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type-v2='color' w='21155' x='24085' y='84359' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontname='Trebuchet MS'>H&amp;M Customer Segmentation</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97948' id='42' param='vert' type-v2='layout-flow' w='98698' x='651' y='1026'>
                <zone h='4616' id='16' type-v2='title' w='98698' x='651' y='1026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47427' id='3' is-fixed='true' name='Customer Segmentation' show-title='false' w='42835' x='651' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='19352' id='23' is-fixed='true' name='Avg Frequency' show-title='false' w='14270' x='43486' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='19352' id='24' is-fixed='true' name='Avg Monetary' show-title='false' w='15222' x='57756' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='19352' id='22' is-fixed='true' name='Avg Recency' show-title='false' w='13352' x='72978' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28075' id='19' is-fixed='true' name='Top Products of loyal customers' w='42844' x='43486' y='24994'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='10770' id='21' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13019' x='86330' y='26924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45905' id='9' is-fixed='true' name='Revenue per Segment' w='21415' x='651' y='53069'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14103' id='11' name='Revenue per Segment' pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type-v2='color' w='21155' x='24085' y='84359'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45905' id='17' is-fixed='true' name='Age distribution of loyal customers' w='32134' x='54196' y='53069'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21282' id='18' name='Age distribution of loyal customers' pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]' type-v2='color' w='13019' x='86330' y='5642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39874' id='13' is-fixed='true' name='Revenue Seg 2' show-title='false' w='32130' x='22066' y='59100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1685FD10-9748-400D-A754-074227807E56}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='15' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D4854320-F73B-497C-A431-98113A1B487E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E8E60D88-8F9F-47AE-AF2E-C8EAF22BF53A}' />
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='251'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{7198893F-AD81-41D8-A1A7-1B82C6954E44}' />
    </window>
    <window class='worksheet' name='Total Transactions'>
      <cards>
        <edge name='left'>
          <strip size='251'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{285F8BD7-FBE8-4895-89DC-4106B66DAACB}' />
    </window>
    <window class='worksheet' name='Current Year Sales vs Previous Year Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A1F3DB35-87D0-4717-8B04-9BF96651E1EF}' />
    </window>
    <window class='worksheet' name='Total number of transactions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{48CB00B5-9344-4B22-910C-41B28784E4A4}' />
    </window>
    <window class='worksheet' name='Top 10 Product Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C7D09705-C952-460F-A5B9-D5FCEAF56947}' />
    </window>
    <window class='worksheet' name='Top 10 Products (By Revenue)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Sales Current Year (copy)_5977684105963302916:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <simple-id uuid='{FF23BB5C-B835-4760-B9E6-DF2BA845095A}' />
    </window>
    <window class='worksheet' name='Top 10 Favorite Colors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:colour_group_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4F1198A1-2E19-416A-AD30-4A4638D5FD1E}' />
    </window>
    <window class='worksheet' name='Top Products per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105994219542:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BC305B83-7418-4B6E-96F7-8DDF12BF4BE0}' />
    </window>
    <window class='worksheet' name='Channel ID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:Calculation_5977684105962385408:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E6B0BF3A-97B8-4CBB-A977-421FB11318FC}' />
    </window>
    <window class='worksheet' name='Total Cust by channel ID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B6E392BD-BB00-4CE1-9959-868EF70706E3}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{398EE179-79B4-42E6-91CE-75A2AE91D585}' />
    </window>
    <window class='worksheet' name='Top Products of loyal customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:product_type_name:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BE970D91-709F-4FCA-B260-CCC7BEA830FE}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[avg:age:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{049F214F-D432-4A9B-A63C-EA2C3438E60A}' />
    </window>
    <window class='worksheet' name='Age distribution of loyal customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[Age (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C432ACCC-82F2-4248-B346-48AC3D2FEEED}' />
    </window>
    <window class='worksheet' name='Which department does loyal cust shops most'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8145D4E3-B540-4277-B188-12AD962DADE2}' />
    </window>
    <window class='worksheet' name='Average Recency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BD968D58-0F22-4780-9EBD-D5FDC8C4B048}' />
    </window>
    <window class='worksheet' name='Revenue per Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[sum:Calculation_3277002074579259392:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{509F8774-8718-4877-B919-DB00592B0466}' />
    </window>
    <window class='worksheet' name='Revenue Seg 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4C8E2D53-5442-4172-9CA3-0B81E5D31FB8}' />
    </window>
    <window class='worksheet' name='Customer Segmentation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[usr:Calculation_3277002074579537921:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B5FA13BC-E1A9-4D53-A61B-C4F8364A4D21}' />
    </window>
    <window class='worksheet' name='Avg Recency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{E4B03995-7D8D-4540-A6BA-E8FA37D39F8D}' />
    </window>
    <window class='worksheet' name='Avg Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6BD8F4C2-DFA8-4714-99F5-D8B6ADC06026}' />
    </window>
    <window class='worksheet' name='Avg Monetary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{44402A46-8F85-42C5-A4CA-4AF7C77D40E6}' />
    </window>
    <window class='worksheet' name='loyal_cust'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4888F0EF-0690-49AF-AA16-4F126AD26D73}' />
    </window>
    <window class='worksheet' name='Sheet 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{299E6E9C-E86C-4BAC-9A64-CA74D292F8C6}' />
    </window>
    <window class='worksheet' name='LOckdown channel id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19bcibn0s49ltq19trvq7062mv6e].[none:sales_channel_id:ok]</field>
            <field>[federated.19bcibn0s49ltq19trvq7062mv6e].[yr:t_dat:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{FB3C1EB7-1EA9-41E9-BB1D-30671D222849}' />
    </window>
    <window class='dashboard' maximized='true' name='Customer Segmentation Dashboard'>
      <viewpoints>
        <viewpoint name='Age distribution of loyal customers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Frequency'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Monetary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Recency'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Customer Segmentation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue Seg 2' />
        <viewpoint name='Revenue per Segment'>
          <zoom type='entire-view' />
          <highlight field='[federated.19bcibn0s49ltq19trvq7062mv6e].[none:RFM_Scores_Segments:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top Products of loyal customers'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{97006BDD-F129-419C-B44B-F48C4F19DB66}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1FAFA9B4-7123-48ED-B875-41BB2D722DF1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average Recency' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdZ3AcZ37g/2/35BnMDNIgDiJBEABJAARAEiDFIHIVSGtFSdbJW971bnnt
      uiuHc/lCXV2V78p+dy/OW747u3xenb21tk+l2ySvVhK1lMQIBjEiECByToM8eYBJ/X/Bmv5z
      BJBiBCnN86lCFdkz0/08PcDze/r3PE+3pCiKgiAIgpBy5KddAEEQBOHpEAFAEAQhRYkAIAiC
      kKJEABAEQUhRIgAIgiCkKBEABEEQUpQIAIIgCClKBABBEIQUJQKAIAhCihIBQBAEIUWJACAI
      gpCiRAAQBEFIUSIACIIgpCgRAARBEFKUCACCIAgpSgQAQRCEFCUCgCAIQooSAUAQBCFFiQAg
      CIKQokQAEARBSFEiAAiCIKQoEQAEQRBSlAgAgiAIKUoEAEEQhBQlAoAgCEKKEgFAEAQhRYkA
      IAiCkKJEABAEQUhRIgAIgiCkKBEABEEQUpQIAIIgCClKBABBEIQUJQKAIAhCihIBQBAEIUWJ
      ACAIgpCiRAAQBEFIUSIACIIgpCgRAARBEFKUCACCIAgpSgQAQRCEFCUCgCAIQooSAUAQBCFF
      iQAgCIKQokQAEARBSFEiAAiCIKQoEQAEQRBSlAgAgiAIKUoEAEEQhBQlAoAgCEKKEgFAEAQh
      RYkAIAiCkKJEABAEQUhRIgAIgiCkKBEABEHYUOFwmGg0+rSLISACgCAIQsoSAUAQBCFFiQAg
      CIKQokQAEARBSFHap10AQRBSj+LzoETDT7sYKU8EAEEQNlz88kmive1PuxgpT6SABEEQUpQI
      AIIgCClKBABBEIQUJQKA8MxQFIVAIEAwGHzaRRGElCAGgYUnRlEUFhcX8fv9yLJMTk4ORqPx
      ru+PRqNcunQJvV7P/v37N7Ckz55wOEwwGESn02EymZBl0VcTHj/xWyU8MaFQiEuXLvHLX/6S
      999/n6mpKWKx2F3fH41GOX/+PJcvX97AUj5Zq6ur+P3+B/7c3Nwc58+fp7e3l3D42ZkuGQ6H
      8fl8KIrytIsiPAYiAAhPzMzMDLdu3WJubo7BwUH6+vpYWVl52sXaUFevXuXTTz994AZzeXmZ
      9vZ2RkdHn6kA0NbWxscff/y0iyE8JiIACE+EoiiMjIzg9XppamoiJyeH3t5eAoHA0y7ahrp+
      /Trnzp172sV4bDo6Ojh16pS4AviaEAFAeCKCwSCTk5OYTCa2bt1KSUkJLpeLxcXFe6aBnhZF
      Ub42jdrXqS7CkyUGgYUnYnp6mrm5OYqLi8nKyqKiooLu7m6GhoYoKSnBbDbf977C4TCzs7ME
      AgFyc3Pxer1MTk7idruJRqM4HA4qKyvJzMxkcXGRyclJ5ufnCQQCmM1mqqqqcDqdaDSapP3G
      43Hm5+cZGBhgeXmZcDiM3W6noKCAsrIyTCbTumWZmJhgenqaQCCAJEmYzWby8/NxOp0YDAbi
      8TidnZ3EYjG8Xi+xWIxr164hSZK6H7vdzubNmx/+BK8jFovR09ODy+XC4/Gg1WrJzs6muLgY
      p9OZdHy4HSg8Hg9jY2MsLCwQDofR6XTY7Xb1e9NqtcRiMW7dusXq6irLy8vA7SubO/dnsVio
      rq5+rPURnjwRAITHTlEUxsfHcbvd7N69G5vNRkVFBXa7nZ6eHpqbmx8oAKysrNDV1cWtW7fI
      yspiaWkJr9dLNBplZWUFg8HA+Pg46enpjI+P43K5iMfjBAIB4vE4t27d4q233iI/P1+dTZNo
      LM+dO8fMzAyyLCPLMtFoFIvFQm1tLbt37yYrK0stRyAQ4OrVq1y7do2lpSU0Gg2yLBOLxbDZ
      bGzbto2DBw8iyzInTpwgFAqxtLREJBLhww8/VPcjyzIVFRWPNQCEQiFOnz5NW1sbwWAQvV6P
      oijE43Hy8vJobm5m+/bt6HQ64PZ3NDExwcWLFxkYGFBnHCmKgkajITs7mxdeeIFNmzYRi8U4
      efIky8vLuN1uFEVJqo8kSRQVFYkA8BUkAoDw2Pn9fqampjCbzeTm5qLT6cjIyKCwsJCOjg4W
      FxfJyMhY0yO/m3g8jtfrZWhoCI/HQ2VlJbt378ZiseDxeLh48SKXL1/GbDbjdDppaWkhOzsb
      RVG4ceMGHR0ddHd3k5OTgyzLKIrC/Pw8H3zwAW63m+eee46SkhK0Wi1LS0u0t7fT2tqKJEkc
      PnwYvV4PwNDQEBcuXECn07Fv3z5yc3ORZRm/309/fz8TExNEIhEsFguHDx8mGo3y6aefMj8/
      z8svv6zWR5Ik0tPTH+s5v3jxIqdOnSI3N5fDhw9js9mIRqNMTExw+fJlTp06hclkUhvpYDBI
      Z2cnnZ2dlJWVUV1dTVpaGrFYjNnZWW7dusXy8jKxWAytVsuBAwdYWVnh7NmzjI6OrqlPWlra
      Y62PsDFEABAeu5mZGVwuF0VFRWRlZSFJEhqNhs2bN9PV1UV/fz/FxcXrpljuJTs7m0OHDrF9
      +3bsdjtarZZwOMzS0hIul4v6+npaWlpwOBxqo22z2ejv72dqaop4PA7cDiitra24XC6OHj3K
      3r171QYsEomQlZXFiRMn1MaxqqoKgKmpKXw+Hy+++CLNzc2YTCYkSSIajVJZWUkwGMRsNqPV
      amlqagLgypUrLC8vs3v37jUpmMdlcXGRM2fOYDKZePPNNykuLkaj0aAoCuXl5VgsFo4fP861
      a9coLS3FZDLh9XqZmpoiOzub/fv3s2nTJrRaLYqiEAqFqKmpwWazodVq0Wg01NfXA3Dz5k1G
      R0efaH2EjSMGgYXHSlEUJicnWV5epri4OKmnW1lZidVqpbu7+6Gmg6alpVFaWqrmpgH0ej12
      ux2DwUBRURGFhYUYDAYkSUKSJPLy8tBqtUQiEXU/0WiUa9eukZuby549e5J6rzqdjvLycurr
      61leXmZkZCSpDLFYDEmS0Gq1agOo1WrJycmhtLRUTbEkjp+Q+P+dP49LX18fi4uL7Nu3j9LS
      UvXKSpIkLBYLNTU1lJeXMzU1hcvlAlAHiWOxGLIsq+czMaZRWlpKZmZm0r6+WOYnVR9h44gA
      IDxWPp8vKf2TaFgA0tPTKSoqYm5ujvn5+QeeDXS3hkaW5bs2RInX7uT1evH7/ZSUlKybutDr
      9eTm5mI0GtWBZoD8/HxsNhunT5/m/fff5+bNm3g8HvXK4mmZnJxEURRqa2vXbaTT0tIoKysj
      GAyyuLgI3P4u8vLycLlcfPjhh3z22WeMjo6yurr6NKogPCUiBSQ8Vi6Xi5mZGcLhMB0dHYyO
      jia9vrCwwOrqKj09PWqqYqMtLCwgSRIOh2PdgCJJEkajEavVSigUYmVlhbS0NCorK/nGN77B
      mTNn+Pzzz2lvb8disVBQUEB9fT3V1dUYDIanVp87B6zvpNfrycjIIBwOq6uSjUYju3fvJhwO
      09bWxokTJ2htbSU9PZ3y8nKamprIy8t7Kt+PsHFEABAeG0VR1DTDysoKly9fXtPARiIRotEo
      N2/e5NChQ/e8N9CTksh135kW+iJFUdT0SKIOJpOJHTt2sGnTJqamphgdHWV4eJiuri56e3tp
      bGzk6NGjWCyWjaoK8P/X525XIom6SJKkzoJK3Jvp5ZdfZufOnUxMTDA8PMzIyAitra10dnby
      2muvUVVVpaa1hK8fEQCExyYxsGi32zl27BhlZWXrvu/48eP09PQwOzuLxWLZ8BudJWYIJdIh
      61lZWVHTRInB6sSVgcFgIDMzky1btrC6usrc3BwffPABFy9eZNu2bVRWVm5ozzk7Oxu4fSVQ
      WFi45vVIJILH40Gv12O1WtXtsixjtVqxWCzk5+dTX19PKBSis7OTU6dOce7cOfLz89X9C18/
      YgxAeGxcLhfT09MUFRVRVVVFUVHRuj/19fVotVpu3ryp5tc3ksViwWaz0dfXh9vtXvN6KBRi
      YmKCUChEenr6unl1rVaL2WwmIyODiooK9u3bh06nw+VyJY1tJObjP8lbYBQWFiJJEpcuXVr3
      dY/HQ3d3N2azed00kSzLGAwGrFYrDoeDffv2UVJSwtzc3JoxgcTsqoe5wZ3w7BEBQHgsFEXB
      5XIxPz9PYWGhOv1zvZ+amhpMJhMdHR1P5bYQGo2GQ4cO4fF4OH78eNLN1mKxGMPDw3z++ecU
      FBRQXV2NJElqSuvGjRtrZjBpNBqWl5eJRqPYbLakK5rs7Gx1Je2TUl9fj8Ph4MKFC/T39ye9
      FggEuHHjBlNTU5SVlalXCFNTU1y4cIGJiYmk20ZIkqTeitpoNK65ksnOzkaSJG7evPnE6iNs
      HJECEh4Lj8fD1NQUVqv1SwcPrVYrpaWltLW1MTU1xaZNmzZ0GqEsy+zZs4dr165x6dIl5ubm
      2LlzJxaLhcHBQa5fv048Hue5557D6XQCt9cODA0NcfHiRXXhVF5eHj6fj8HBQbq7u7FarWsG
      tpuamjh16hTvvvsuHR0dVFZWqgHnhRde+NKydnR0MDs7mzSbKuHQoUOUlZWh1+t5/fXXefvt
      t/nf//t/s3//fsrKygiFQnR0dHDz5k1KS0vZu3evWjav10trayvLy8tUVlZSWVmJyWTC5XLR
      1dXF1NQUL7744ppZUjt27ODEiRP85Cc/4ebNm1RXV6srsn/jN37job8T4ekQAUB4LBYXF5md
      ncXpdJKfn3/PBl2SJGpra+nt7eXWrVuUlZWpDZNer1930DExV3298QJZltHr9eu+ptFo1MVM
      d7JYLPzxH/8x7733HlevXlV7zpIkkZuby9GjR2loaFD3aTKZOHToEAaDgWvXriXdCgGgoqKC
      N954g8zMzKTtxcXF/PZv/zbvv/8+bW1ttLW1odVq2b59+13Pz531nZmZuetYRU1NDSUlJWg0
      Gurq6vh3/+7f8eMf/5hPP/1UfY9Op6Ouro433ngjKf2zadMmXnnlFU6fPk1nZyfXr19XXzOZ
      TBw+fJj9+/evGdAuKCjgu9/9Lj/5yU/UlcQajYaKiop71kd4NkmKuG2gkMLi8Th+v5+JiQmC
      wSD5+fnq7SvuZmVlhYWFBdxutzr9Mjs7e91eOtxOj62srDA7O6uOK+Tk5Dz2geLETKDZ2Vmm
      p6cxGAw4nc51xzES4vE4Pp+P+fl5QqEQJpOJnJwc0tLS7jk4v7q6isvlIhAIYLfb16z5uJdw
      OIxy6pfIve0PVU/h8REBQBCEDSUCwLNDDAILgiCkKBEABEEQUpQIAIIgCClKzAISBGHjpWch
      FZQ87VKkPDEILAjChgqHw0m3oBaeHpECEgRBSFEiAAiCIKQoEQAEQRBSlAgAgiAIKUoEAEEQ
      hBQlAoAgCEKKEgFAEAQhRYkAIAiCkKLESgxBEDac+4NPCN/sfdrFeCSWXfXYXz70tIvxSEQA
      EARhwwWutuP75a+fdjEejUb+ygcAkQISBEFIUSIACIIgpCgRAARBEFKUCACCIAgpSgwCP0WK
      ojA7O4vb7U7aLssyer0ei8VCZmbmY394+LNKURTcbjdTU1PMzs6i0WjIzs5WH2wuCF8H0WiU
      X//618TjcV599dV7vndxcZHLly/T0dGB2+3G6XSye/duampqSEtLe6RyrK6uigDwNMViMS5d
      usTly5fXvCZJEhqNBofDQW1tLc3NzRiNRiRJ2rDyKYpCPB5nYWGBtLQ0LBbLEztWKBTiX/7l
      X+jp6SEcDhOJRJAkCa1Wi9VqZffu3Rw+fBhZ3riL1kgkgs/nQ6fTYbVaN+y4wtdTPB7n1KlT
      /PVf/zXXr1+noqLirgEgEolw/fp1fvCDH3Dp0iWCwSCxWAydTkdGRgbf+973+P3f/33y8vIe
      uBzRaJTe3l7+9m//VgSApy3xxe7YsYPc3Fzg9hcUDAaZn5+nv7+f0dFRZmZmeOuttzb8IRoj
      IyP80z/9Ey+99BJ79+59IsdYXl7mxz/+MSMjI2RnZ7N7924KCwtRFIXx8XHa2toYHh7m0KGN
      nXI3MjLChx9+SFVVFUeOHNnQ4Ct8vVy5coX/8T/+B+fOnWN+fp5wOExGRsZd39/T08N/+S//
      hd7eXn7jN36Db3/721itVq5fv84//MM/8IMf/IBoNMof/MEfqO3Gl4nH40xOTvI3f/M3/PSn
      P2V+fl4EgGeBxWKhtraWyspKdVui9728vMzf//3fc+nSJfbv309hYeGGNUSKohCJRPB4PKys
      rDyx4/ziF79gYGCA2tpa3nrrLSwWi5r22rp1K3v27MHv929o7x9u98K8Xi+hUGhDjyt8vfzw
      hz/kL//yLxkfH6e5uZkf/vCH/OEf/uFd/47n5+f5xS9+QXd3N7/3e7/Hf/pP/wmz2Ywsy1RX
      V1NZWcmf//mf85Of/ITnnnvuvgKAoij09vZy9OhRFhcXKSws5D//5/8sBoGfBYlUh16vV38M
      BgMmk4n8/Hz27t2LoihMTEzccz+KovBVe8Ln8PAwHR0dOJ1Ofvd3f5eMjAwMBgNarRatVovB
      YMDhcFBaWvq0i3rfnoXv4Vkog3Db+Pg4RUVF/NM//RP/8i//wksvvYROp7vr+xcXF7l06RLV
      1dV8//vfx2q1otVqkWUZo9HI3r17efnll1laWuLChQssLi5+aRkURcHr9RKNRvnzP/9zzp07
      x/e//31xBfBVkOj5RiKRpO2KorC6ukp3dzcXL15kcnISRVEoLS1l165d1NfXo9Fo1J5GolEY
      GRnh6tWrjI+Ps7KyQlpamjq45HQ6kWWZ9vZ2enp6WF5eJhKJcOPGDWZnZ9Vj22w26uvrcTqd
      D10vRVH49a9/TSQS4ejRo+j1+nV7RZIkJW3v7++nv7+f7du3U1Ky9sHi3d3d9PX1sXfvXnJy
      cpLqv7S0xKeffsrU1BQ+n4+0tDTy8vJoaGigsrISWZYZHx/n4sWLLC0t4fF46Onp4d1331X3
      r9FoaG5uVo+duFq7dOkSHR0djI2NEY/HKSoqoq6ujv3796+pQ+KPPDc3l4KCAq5fv87AwADz
      8/NYLBaam5vZtWsXsizT2dlJV1cX4+PjKIpCRUUFR48eJScnJ+mqSFEUAoEAJ06cYGBggNnZ
      Wex2O9XV1ezdu3fN1aPH46GzsxONRsP27dtJS0tjZmaGGzduMDExQV1dHTt27MBoNOJ2uzl7
      9iyjo6O43W7MZjMOh4OGhgZqamru2aCluj/5kz/hz/7sz9QxvC+7gvf7/YyMjLBz507KysrW
      vF+j0XDw4EGOHz/O5cuXef3118nKyrrnPiVJora2lvb2djIyMpBlWaSAnmWJxjoUCtHW1oYk
      SUm94MQf+8cff8yZM2dIT0+nrKxMvVIYHh5menqaF154AZPJpH7m7NmznDhxAp/Ph8ViwW63
      Mz8/z8jICKdPn+aP/uiPqK6uZmxsjEuXLhGPx4nFYoyMjDA+Pq4ePy8vj7KyskcOAKOjo2Rl
      ZVFbW3vfqa2pqSk+//xzsrOz1w0AY2NjXLhwga1bt+JwONT9joyM8D//5/8kGo2i1+vJycnB
      4/EwNjZGW1sb+/bt45vf/CZzc3NJdZ+enk4Kfnq9nsrKSvXYPp+Pn//857S3t6PT6dQgOjk5
      SV9fHz09PXznO99JGkj2er2cP3+e1dVVZFkmEolgs9kwm80sLCzw/vvv09HRQTAYZG5uDpPJ
      REZGBsvLy1y5cgWPx8Pv/u7vYrfb1fq5XC5++MMfsrCwQGFhIdu3b8fj8XDp0iV6e3t54403
      2LZtm/r+QCBAd3c3Op2OsrIyOjs7+fjjj1laWkKWZYqKiojFYkxMTPD222+zvLyMVqslLy+P
      QCDAxMQEbW1t7N69m29/+9sP90uQAu43R58Qi8XUlKuiKOv+XVRVVeF0Ounr6yMQCHzpPiVJ
      wmw2Yzabk7aLAPAMiMfjhEIhfD5f0vbJyUlOnz7N1NQUr732mtqDUxSFaDRKd3c358+fp66u
      jjfffJPMzEw1AHzwwQd0dnaSn59PY2OjGvG7urrQ6XR897vfpb6+HoPBoDbEp0+fRq/XA3Ds
      2DG++c1v0tfXx9/93d/x6quvcvjw4aTyPepYhNvtJhwOU1JSsiHjGsePHyccDvOd73yHpqYm
      DAYD8Xic+fl5Ll++jNFoRKPRsHPnTnbu3El3dzc///nP2b59O6+//vq6ZYxEIpw6dYq+vj5q
      amp48803ycrKQpIkgsEg//iP/0h/fz8nTpzg2LFjST1lRVHQaDQ0NDSwf/9+8vPzkSSJGzdu
      8MEHHzAyMsLmzZt59dVXqaqqwmg04vf7+bu/+zsGBgYIBALY7XYAwuEwP/vZz/D7/bzxxhs8
      //zzSJJEOByms7OT9957j9OnT+N0OtcMPkYiET7//HNu3bqFTqfjlVdeoba2lpycHHQ6HT//
      +c/xeDy8+uqr7N27V50N5na7uXDhArFY7Al+a6nHZrNRWVmJy+Wiu7ub4uJiDAYDsiwTj8eJ
      RqNEo1G0Wi1LS0sEg8GHPpYIAM+Aubk5/vmf/1md4ZNIKUSjUXbs2MF3v/tdKioqki73PR4P
      77zzDo2NjXzve99Tt0uSRHFxMa+//joffPABV65coaCggMLCQsLhMLFYDKvVitVqJRaLEYlE
      0Gq1lJWVUVZWllSuxOXqnT+P09TUFPF4/JGuIh7EysoKOp2O3NzcpLrn5uYmTcdL1PPO+t6t
      /tevX+fy5cscPnyYffv2qVdbAGazmX/9r/81Z8+e5Ve/+hWFhYW0tLSor+v1erZt28Zv/dZv
      Je2zvLyc4uJisrOzOXbsGMXFxepraWlp1NbWMj09jd/vJx6Po9FoOHHiBH19ffz7f//v2bRp
      U9IxGhsbsVgs/OM//iMnT57kzTffTDpeR0cHmzdv5lvf+hbl5eVr6rm6uopGoyEnJ0edGJCY
      jvjKK6/c17kX7l9VVRX/7b/9N/74j/+YAwcO0NTUxKuvvkpmZiaLi4u0tbVx/vx5RkdHSUtL
      Y3V19aGPJQLAM8DhcPDaa69RUVGhXv75fD5GR0fp6uriRz/6Ebt27eK1117DbDajKAqLi4tI
      koTFYmF+fn7NPkOhEDqdDp/Pp85iyc3Npby8nPPnz/POO++wZcsW9VLSYrGos282apZRRkYG
      kiTd1yDW49DS0sLc3Bz/63/9L3bs2KGmcdLS0jCbzerVz4NIjJEUFBSs+3lZlikpKSEWiz3R
      eiZ+B/R6/V1/H/R6PX6/f01aIS8vj2984xvr5psBGhsbmZqa4kc/+hHbtm1jy5YtbNq0ST1v
      BoPhidUrFUmSRH19PX/1V3/FX/3VX3HlyhU6OjpQFAWdTofJZGL79u3o9XrC4fCatM6DEAHg
      GaDRaDCbzdhsNnVbfn4+lZWVHDhwgJ/97GdcuHCBgoICDh48iKIo+Hw+VlZWaG1tpaOjY80+
      Ez213NxcdfBYr9dz6NAhrFYrN27coK+vj46ODmRZpry8nL1791JZWYnBYNiQIJBY5Tw3N3fX
      XOfj1NLSgl6v58yZMwwODtLd3Y2iKBQXF7Nr1y62bdv2wAu+gsEg8Xgck8l012mqVqtVHbN5
      UhIzPN5+++11X4/H46yuriJJEpFIJClYOZ1O8vLy7lr+hoYGdDodZ8+eZXJyksHBQSKRCE6n
      k127dlFXV6emooTHQ6/Xs3fvXmpra+nv72dwcJBwOExRURGbNm3CbDbzJ3/yJ4yNjT3SAk0R
      AJ5xBoOBb3zjG1y7do3+/n4OHjyo9vy1Wi0lJSXU1NTc9fM2my1phkBaWhrPP/88zc3NTE1N
      MTo6ytDQEBMTE/zoRz/i29/+Ng0NDRty+wmz2Ux6ejozMzMsLi7icDie6PFkWWbnzp00NDQw
      MTHB6OgoIyMjjI6O8otf/AKXy8Urr7zyQDNazGYzkiQRCoXUdMwX+Xw+dRDuSUlLS1Prd68r
      mdzc3AdeTyHLMnV1dWzfvp3p6WnGxsYYGhpidHSU9957j4mJCd566y0xE+gJsFqtNDY20tjY
      mLT92rVrTE9PU1BQ8Eir1EUA+ApIXGInBnskSSIjIwOtVovD4eCFF1544AbbZDJRUVFBRUUF
      zz//PDdv3uTdd9/l3LlzbN++Xd2fLMsoivLEBvoaGxv56KOPOHPmDK+//vp9r3R+lDnuGo2G
      0tJSSktL2bdvH8PDw/z0pz+lu7ublpaWpOX1kiQRj8fv2rhnZGSg1+uZnp5m06ZNSWMAcLvn
      PTY2pt7W40lxOBzIskxNTQ0VFRVP5BiyLON0OnE6nezZs4fp6WneeecdOjs7OXDgwIaN5aS6
      SCTCuXPnGBkZ4YUXXiAnJ+eh9yUWgj3DEqmeK1euEI1G1WmHiSuAnJwcBgcHGR8fX9NAx+Nx
      vF4vc3Nz6hiA3+9ncXGR1dXVpAZUo9GwdetWbDYbwWBQfS3Ra03cDygejz/2Ou7du5esrCwu
      X75MV1fXmhXH8XicYDCI2+1WyyXLsnq7jDvrnThfPp9vzfmIRCJMTU2xsrKypu55eXmUl5cT
      i8WSZlTodDr0ej2BQAC/379u+QsLC7Hb7bS1tTE3N7fmHC0vL3Pp0iXS0tIoKip6uJN0H8rL
      y5FlmQsXLqxb1mg0ysLCAnNzcw+032g0isvlSvq9gNu/Gzk5OVRWVqIoyiPNRBHWikQi6njN
      ncLhMG1tbXz66adkZWXx3HPPkZmZqb7udrsZHR1lamrqvjpt4grgGRAOh5mZmUm6dI9Go6yu
      rjI8PMz58+ex2+3U1taqrxuNRvbv38/777/PRx99xP79+3E4HGi1WsLhMG63m4GBAVZXV2lp
      aaG4uJiRkRF6e3vJy8ujqKhITRsEg0Gmp6dxu93U1NQkpQjS09NJS0ujv7+f7u5uMjMz0el0
      xGIxbDbbI98gLj09ncOHD3PixAneffddXn75ZZxOpzrYnRgMlySJF198EUmSMJlMKIrC4OAg
      RUVF2O129ZYVidz+F2dGBAIB3nvvPbZu3Up5eTkWiwWdTkcwGGRmZoaxsTFsNlvSH5PVaiU7
      O5uJiQlu3LhBRUUFBoOBcDisnpfCwkJqamo4e/Ys586do7m5WZ0G6vV6uXjxInuNw0AAACAA
      SURBVC6XiwMHDlBYWPhI5+peqqurqaio4MaNG2RlZbF161Y1PRUMBllYWKC7u5uMjIwvvQPl
      nYLBIMePH6egoICKigpsNht6vZ5QKMTS0hIDAwOkpaV96UKkVBUMBhkdHV3TsVldXSUej3Pj
      xg11W2INSUZGBlNTU3z22WdUVFSQn5+PwWBgZWWFgYEBfvzjH3Pr1i3+zb/5N1RVVSXt99Kl
      S/zqV78iJyeH//Af/oM6rhiPxxkcHEzqHCwtLYkA8LRJkoTH4+H06dMYjUZ1eyQSUXvqBQUF
      NDU1Jc3S0Gq11NXVMTk5SU9PDz/96U8pLCzEaDQSCARYWlpCURTq6+vV3LPBYGBpaYmOjg7S
      09PJyclBq9WyuLjI1NQUGRkZNDc3q2kYSZIwGo0899xznDt3jv/7f/8vxcXFmM1mtFotLS0t
      jyXdsG/fPiRJ4vz58xw/fhyr1UpmZqZ6L6RAIEBTU5P6/ry8PDZt2kR/fz9ut5vs7GyCwSBL
      S0toNBoURUGW5aRBZZ1Op06XzMrKIicnB5PJxOLiIi6XC51OR0tLS9JgZmZmJtXV1YyPj/Px
      xx9TWFiI1WplZWWFQ4cOUVVVhSzLNDc34/P5aG9vx+Vyqes1pqenmZycZMeOHRw8eHDd7/5u
      7jXtdr3tWq2Wo0ePcvz4cU6fPk13dzdZWVnIsszS0hJerxer1Zo0RfR+ypG4BcHZs2dpa2sj
      JycHq9XK8vIy09PTxONx9u7de88bm6Uyl8vFf//v/52xsbGk7YuLi0SjUf7jf/yP6rbs7Gz+
      7b/9t+zbt4+ZmRn++q//mlgsxtatW7Hb7bjdbrq6uohGo3zrW9/irbfeWpNW7Onp4Wc/+xnF
      xcX80R/9kRoAYrEYf/u3f0tnZ6f63nA4jOYv/uIv/uLJVV/4MisrKxiNRrKysrDb7epPTk4O
      ZWVlbN26lYMHD1JdXZ2Ug5YkCb1eT3l5OVarFY1Go141GI1GnE4nO3fupLGxUe3V2mw2HA4H
      JpOJWCyGz+cjEAioOfEDBw5QWVmZlIeXZZn8/Hz0er2aeolGo2RmZlJWVobBYCAUChEOh+/7
      J5FPTzQ8sixTXFyMw+HAZrNhMBiIxWLq3PPa2lpqa2tJT09X0182mw1FUQiHw6ysrKDX6ykt
      LaWlpYXy8nIyMjLYsmULaWlp6rlyOp1YrVbC4TDBYBCv1wtAQUEBLS0tNDY2JtVdq9Vit9ux
      2Wxq3RMrdisqKtRnFFgsFnWxTiQSYWlpCZ/Ph9Vqpba2liNHjiRdWcDtP8hEWq+goCDptcQM
      rqysLIqLi9eMK4TDYQwGA5WVlWr94HbAKi0tVb+rlZUVotEodrudzZs389xzz7F161b19ygW
      ixGLxcjJycHpdK47nVOn01FQUEB6erqaIvN4PMTjcXJycmhubmbPnj0PNAAci8Xwn7lIuHfw
      vj/zLDLVVmPd33zP9wSDQQYHB9Hr9WRmZqo/tbW11NfXJ23Ly8ujqamJvLw8NBqN+n0sLS0x
      OztLPB6nurqab33rW3znO9+htLR0TfAOBoOYzWYaGhp47rnn1H0oisKtW7dQFEU9nsPhQFLE
      HaO+8hKDtIFAQJ0XfK9piXeuPI7FYuj1eux2Ozqd7q69wXg8TiAQIBAIoNVq1fTR8PAwXV1d
      D1Te8vJytm7dum6Dk1jlnFgVbbFY7vq+UCiE2+0mFothsViwWq331RAl6r66uoper8dms61p
      ZO+UOF+JaZxWq3XdZzMkpnomrr4yMjKwWq0bfhvpRABJnMO0tLTHMlc/sT5lZWUFrVb70CnA
      cDjMzF/8Jb5f/vqRy/Q0ZX77DQr+7E+f2P5jsRher5eZmRn8fr86jnRn0H9UIgX0NZC4m+j9
      zsWWZVld+HW/ZFlWVxAnJHr0Dzq//V4rFyVJQqfTrekxr/e+9e5tcj9MJtM9G/wvut/zJUkS
      aWlpj/ykpkeVuOJ53Hl5o9GYlKYUniyNRkNGRsYTTa+JACA8NJ1OR1VV1QPfqlmn04k544Lw
      DBABQHhoiZ7mw9xCQRCEp0+sAxAEQUhR4gpAEIQNl37sJaw7tj/tYjwSY0XZl7/pGSdmAQmC
      sKHC4TCyLN/3bT+EJ0ekgARBEFKUCACCIAgpSgQAQRCEFCUCgCAIQooSAUAQBCFFiQAgCIKQ
      okQAEARBSFEiAAiCIKQosRJDEIQNt/ru37NytfVpFyPliQAgCMKGU6JRCIefdjFSnkgBCYIg
      pCgRAARBEFKUSAEJwldMNBoFSHqusiA8DBEAhHUpisLKysqa7ZIkIcsyGo0m6SH1X/xsJBIh
      Eomg1+vRarVPrKFKPEM4EokQjUZRFAWNRqM+dexuz0X+qlIUhYGBAQA2bdokHsYjPBIRAIR1
      xeNxzp07t2a7RqPBZDJht9txOBxYrVZMJtOaBr6np4ehoSHq6+spKSm5a7B4FNFoFK/Xy/j4
      OOPj4ywuLqIoCjabjdzcXIqKisjMzFQfYP91EIvF+OUvf4ler+f3fu/3RAAQHokIAMK6otEo
      7733HgaDgfT0dHV7PB4nGo0Si8XIysqisbGRpqampAdXK4rC4OAgFy5cIC8vj+Li4sdevlgs
      xuTkJKdOnaK/vx+tVovRaERRFEZHR/H7/ZhMJnbt2sULL7zwUA+Pf1YpiiJSP8JjIQKAcFeS
      JFFcXMwrr7yibotEIvh8PmZmZujp6eHkyZPEYjEOHz6sPuhdkiQ2b96MTqfD6XQ+kd632+2m
      tbWVvr4+ampqaGhoIC8vj2g0yvLyMsPDw/T39zM2NkY4HP5aBQBBeFxEABDuyWq1UlVVtWZ7
      NBqlsrKSn//85wwNDdHY2IjD4QBuB4Da2lpqa2ufWLkmJiYYGhqiqqqKo0ePqscGyM/Pp6am
      hvn5eaanpzEajY/9+IkH6T2rPfFnvXzCs0EEAOGhaLVacnJycDqdeL1e/H5/UiPs8Xjw+Xxk
      Zmau2/tWFIXFxUW8Xi/BYBBFUTAYDFitVnXwNjMz867H9/v9BAIB8vPzycrKWvc9DocjqUwJ
      U1NTyLJMRkYGs7OzeDweotEoRqNRHdtYL7euKAput5vFxUV8Ph+KomA2m3E4HKSnp68Z5wgE
      AiwsLOBwONBoNCwsLOD3+wmFQkiShN1uJzc3F5PJtO6xAoEAy8vLBAIBIpGImuaKRCLrBjVF
      UYjFYkxPT+Pz+QiFQuj1erVOX/wewuEwbrcbSZJIT09Hp9MRCoVYWloiEAiQkZFBRkYGWq2W
      cDjM3Nwcfr+fcDiMVqvFYDCQmZmJ3W7/2oyxpBoRAISHoigKoVAIn8+HVqtd02D29vbS1dXF
      /v372bx5c9JroVCIoaEh2tramJ6eJhgMotVq0Wq1ZGVlYbFYKC4uZt++fXc9vk6nQ6vVsrS0
      hNfrTRqn+DInTpwgFotRWlpKV1cXCwsLKIqCTqcjLy+PpqYmampqsFgs6mei0SjT09NcuXKF
      4eFhNWjp9XpKSkpobm6mpKRETYPB7auUjz/+mIaGBqLRKL29vSwtLREKhQiHw+Tn57Nnzx4a
      GxuTzl80GsXlctHZ2cng4CAej4d4PI5Go8FqteJ2u7FarWvqtbKyQmdnJ5cvX8bj8ahBw2az
      UVdXx44dO5LOk8/n4/PPP0er1dLS0kIkEqGrq4ve3l4WFxfZs2cPLS0trK6u0tbWRnt7O/Pz
      8yiKogaAsrIyduzYseY7Fr4aRAAQHkhi2uXc3BxtbW14PB6amprW9NaXlpYYHh6moaEhaXs8
      Hqe9vZ1PPvmESCRCeXk5WVlZmEwmvF4vk5OTdHd3r9vA3SknJ4e8vDx6enqw2WzU1taSm5uL
      Xq//0rTH8PAwS0tLTE1NUVxcTEVFBQaDgbm5OQYGBvjoo49QFIWmpia1Zzs7O8tnn33G2NgY
      5eXlFBcXI8syMzMzdHZ24na7efPNN8nJyVE/4/P51EZflmUKCgqoqqrCYrEwOztLf38/ra2t
      FBYWqgPliqIwPT3NZ599xuDgIDk5OVRVVZGWlkY4HGZhYeGu9Wpvb+f9998nMzOTxsZGbDYb
      fr+f/v5+Tp48STQa5eDBg2qQWl1dZXp6Gp1Ox+TkJLdu3aKjowOLxUJubi6ZmZloNBra29v5
      1a9+RWZmJps2bSI7O5tIJMLS0hJDQ0PEYjERAL6iRAAQ7snj8dDb2wvcHgBeWVnB7XYzOjqK
      y+Wiurqa3bt3r5vGWM/U1BSnT58mGo3yjW98g6amJiwWC5IkEYvF6O3t5e233/7S/eTn59PU
      1MSpU6c4d+4co6OjbNq0iaKiIgoLC7HZbPecemq1Wnn55ZfZunUrVqsVRVEIBoNcuXKFkydP
      cv36dcrKynA4HKyurtLV1cXIyAj19fU8//zzZGRkIEkSgUAAk8lEa2sr3d3dZGRkYDAY1ONI
      kkR2djY7d+5ky5Yt6ueWl5c5ceIEXV1daiCC26mtGzduMDg4SE1NDQcOHCA/Px+tVqumoKan
      p9Ucf4LX6+WTTz7BaDTy6quvsmXLFiRJIhqNsmnTJn71q1/R1tbG5s2bKS0tTfrs0tISra2t
      zM3NsWXLFhoaGnA6nVitVjQaDdevX0dRFI4cOUJVVZV6tRIKhRgcHCQej9/Xdy88e0QAEO5K
      URSmpqb45S9/CdzOGYdCIfx+P3q9noaGBpqbm8nJybnvfba3t7O4uMiLL75IS0vLmsYyLS3t
      vvZjNBqpq6vDZDKpjfPw8DAZGRmUlJRQXl5OTU0N6enpa/LTkiSRkZFBc3Nz0jaLxUJ9fT0u
      l4u+vj7Gx8dxOBwsLS0xMjJCZmYmDQ0NSVc7FouFlpYWuru76ejooLGxMalOsiyze/fupGMB
      2Gw2ysvLaW9vT1pwNz09TX9/P4WFhRw4cICioqKkMiYa5S9e5fT39+NyuTh27FjSoL1Wq6Wo
      qIimpiZ+/etfMzAwsCYATE5OYrVa2bFjB/v27cPhcCTtf2VlBVmWycnJSbrCMpvNT3SgX3jy
      RAAQ7slut1NZWQncnnu/urqK3+/H6/Xi8Xi4desWRqORvLy8+9rf5OQker2eurq6R17ElJaW
      pi40m5iYYGJigvHxcbq6utSFaIcOHaKgoGDN1cDd0kSJhrmjowO32w3cnnK6vLxMRUXFusHO
      4XCQnZ3N8PCwepuGO603YCvLshoo7uzNJwbG6+rq7vucAoyMjCDLMvX19WteMxgM5OfnqwPR
      X6TRaKirq+PAgQNkZWWtOTfFxcVMTEzwySefsH37dvLz88nOzk4a7xC+mkQAEO5KkiTy8/M5
      evQocDt/Hw6HCQaDzM3N0dPTw5UrVwgGgxw+fDhpMdh6IpEIXq+XjIwMjEbjY5miKMsyWVlZ
      ZGVlUVVVxcLCAuPj47S3t9PW1kYkEuGtt97CarXe1/ESK50TKSGAYDBIIBBgfHycTz/9dN0Z
      L/Pz8/j9flZXVx96oVY8Hsfv96tXKA/SwM7PzxOPx7l48SJa7do/a7fbzcrKCsFgkGg0mvSe
      oqIiGhoa1m38AZqbmwkEAnR2djI6Okp2djbZ2dkUFhZSUVHxQIFKeLaIACDckyzLST1Ys9lM
      eno6eXl55OXlEQqF6O3tVfPb9yJJEoqiPLEpg0ajEafTSX5+Pk6nk/fee4/u7m7m5+dJS0u7
      r0Y5MZUSUBtJRVHU/Pvo6Ohdj11SUvJIdUsEWEmSHrh3HY/HURSF8fHxdV9XFIW8vDyys7PX
      5OxtNts9A2RhYSEvvfQSW7ZsYXJyEpfLxc2bN+no6KC4uJiWlhbq6uoeqLzCs0EEAOGhJObp
      l5aW0tfXx9LS0pd+JjGNcWpq6pF6yvdznKKiIiorKxkbG2N+fl6dtfNlEiudE9Mn4XYKxWg0
      UlhYSEtLyz1TV18WBO9FlmX0er0aCB5EYqzjwIEDarnXY7FY1r1CuBdJksjLyyM3N5eamho8
      Hg9ut5uRkRFaW1sJBoOUlZXd87jCs0kEAOGhhcNh/H4/Wq32vnqskiRRWFjI8PAwbW1tPP/8
      80kDponFT19GURS1gbzz8188VqKnazAY7jvQLC8vc+vWLSwWi7rALC0tDavVyurqKjabjcLC
      wvva14OSZRmLxUIsFmNubo5QKHTfs6tyc3OB2zNzduzY8UTKJ0kSNpsNm82G0+mkuLgYj8fD
      zZs3mZubEwHgK0gs3xMeWKKhbmtr4/r166Snp6sN0JdpamrCarVy9uxZPv30U2ZmZlhZWcHl
      cnH69Gnef//9+zp+R0cH7733Hv39/ev2lkdHR+np6UGr1ZKbm/uldyNVFAWv18vVq1cZGRmh
      pKREnYGTk5NDUVER4+PjdHR04PP51nx+enqaEydO4Pf77+s83E1ubi7Z2dl0d3czPDyspqMS
      ZRweHiYUCq35XG1tLUajkTNnzjAxMbHm9WAwSHt7O9evX3+g8oRCIS5evMjs7GxS6kiSJPUu
      sJIkPfBVhfBsEN+acFeKojAzM8OHH36obovFYvh8PpaWlnC5XCiKQn19/X33ivPz8zly5Agf
      ffQRZ8+epbOzE71er15N2O32+9rP8vIyV65cYXBwkMLCQnJzc9X0i8vlYmBggJmZGV588UV1
      7v2d9Zqbm+PDDz8kLy8PrVaL2+1mcHCQwcFBHA4Hzc3N6q0TzGYz27ZtY2RkhHPnzjE3N8em
      TZuw2WwEAgGmp6cZHh7G5/PR1NR031NZ1+N0Oqmurub06dN8+OGHTExMUFhYSCgUYnR0lMHB
      QZaWltasfHY4HBw8eJATJ07wzjvvUFdXpy5Km5+fZ3x8nKmpKWpqamhsbLzv8oTDYS5cuMC5
      c+eoqanB6XRit9tZWFhgZGSEmzdvkpube98dAOHZIgKAsK5Egzk3N8epU6eStuv1esxmM5s3
      b6ahoYHy8vI1Ux0TD475YuolMeUwOzubvr4+XC4XwWCQgoICqqurAfjxj3/8pWVraGhAq9XS
      1tZGV1cXXV1dam5+dXWV3Nxcjh07RkNDw7rTMAOBAOfPn1fLGIlEkCRJXXxVWFioll2SJEpL
      S3n11Vc5e/YsPT096tVFLBYjFotRUlLC888/v27jf7exh0Tv+c7XDQYDzc3NxGIxLl26xGef
      fYbRaCQWi6HRaNi2bRter3fNuZVlmYMHD2K1Wjl58iQnT55U5+xHIhHMZjN1dXXs3LnzruVY
      j8ViYe/evVy6dInW1lb1QTvhcJiVlRXKy8s5evToE7nhnvDkScoXlxQKArd7yRMTE2tWnCYa
      rMSNySwWy7r5/8QN4tLT09e9GVw8HmdlZYVwOEwsFkOn02E0Gunr6+Mf/uEfOHLkCC+99NJd
      yxePx9U1CYl1CYFAAJ1Oh91uV3/Wy///1//6X9HpdPzO7/wO8/PzagOZlZWl5rjXa7Sj0Sg+
      nw+Px8Py8jLBYBCLxUJ6ejpWqxWbzZb09LNAIMDi4iIOh2NNLj9xL6Xl5WV1Fs6drwUCAebn
      59Wb1ZlMJgoLC3E4HPj9fjQaDdnZ2UmpLUVRWF1dZWlpCZ/Px/LyMoqikJmZqR7DbDardQuH
      w3g8HvXGdHcbx1ldXcXr9bK4uMji4qJ6nh0OB/n5+eveCO9ewuEw4Xfehstn7/szwpMhrgCE
      dSWeBfCwEg3p3ciyjNlsTgoO4XBY7VmvdxfPL37eZDJhMpnIzs4mFosRj8eRJEldKXuvgV+D
      wUBpaSlOp1Odmvplz9jVarVkZGSQnp6O0+kkHo/f83MWiyXphnJ3kiRpTf3vfC0tLQ2z2Uxh
      YSGxWAxZltW7pN7tvEqShNFoJD8/X302QqLc6wU0vV7/pecZbp8rh8NBZmYm5eXlanm0Wu0T
      edKbsHFEABA21PXr1+nt7aWmpobKykrMZjOSJBEMBjl37hwXL17E4XA80M3FHnYQ8mHm2z/K
      8R5UYlrog0oEv8f9uMh7PQda+GoSAUDYULFYjO7ubq5cuYJWqyUtLQ2tVovH4yEcDmO323nt
      tdceaSBVEIT7IwKAsKEaGxspKyvj5s2bTE5Osry8TDQaxel04nQ62b17932v2n1YeXl59z2/
      XhC+zsQgsLDhErdWSPwbSJpx86QfYxiLxdbMvhE2TjgcJvzu/4HL5552UVKeCACCIGyocDis
      DiILT5foAgmCIKQoEQAEQRBSlAgAgiAIKUoEAEEQhBQlAoAgCEKKEgFAEAQhRYkAIAiCkKJE
      ABAEQUhRYiWGIAgbTpmdJB7wPu1ipDwRAARB2HDxvg6kwa6nXYyUJ1JAgiAIKUoEAEEQhBQl
      AoAgCEKKEgFAEAQhRYlB4K8Yt9tNIBDA4XA89kf+PW2Jh6EvLCzgdrvV599mZ2eLJ4QJwhMg
      AsBXTHt7O93d3bzxxhvk5+c/7eKgKAqrq6uEw2FMJtNDPWMXYHV1lQsXLjA4OIjP5yMQCCBJ
      kvrQ9+3bt9PQ0PDEHxZzp2g0SigUQqPRrPvwdkH4qhMB4CtmdnaW/v5+QqHQ0y4KcLvhbm9v
      Z3x8nObmZoqLix94Hz6fj+PHj9PW1oZGo2Hz5s1s2bIFRVGYm5tjYGCAeDxOfX39hj6UfHp6
      mtbWVkpLS9mzZ8+GBh9B2AgiAAiPJBqN4nK5GBoaYtu2bQ+1j5MnT3Lp0iWKiop4+eWXycnJ
      UXvcgUCA6elp9TGOG8nn8zEwMIDRaNzQ4wrCRhEBIIV88fm7z4Lp6WkuXryI3W7nrbfeorCw
      MOlZvRaLhaysLCKRyDNV7nt5Fs7zs1AG4dknAsDXnKIoTE5O0t3dzeTkJKFQiPT0dEpKSqir
      q8Nms61pJBRFob+/n1u3buHxeFAUBbvdjtPppKqqCpvNRiAQoL+/n+npaUZGRvB6vdy4cYOp
      qSl1P7m5uZSXl99zAPfMmTP4fD6OHDmC0+lct8HSaDRJqZ+JiQkmJiYoLy8nLy9vzftHRkYY
      Hx9n+/btZGRkJO3T6/Vy9epV5ubmCAaDmEwmsrKy2LJlC0VFRUiSxOzsLF1dXbhcLvx+P2Nj
      Y3z22WfqPmRZZuvWrUnHjsfjdHV1MTAwgMvlQlEUcnJy2Lx5M/X19Wvq5fF46O7uJiMjA4fD
      QW9vLxMTE7jdboxGI9u2baOmpgZZlhkcHGR4eBiXywWA0+mkpaVlTd0S4zGff/45ExMTLC0t
      kZaWRmlpKbW1tTgcjqQy+P1+hoaG0Gg0lJeXYzabWVxcpK+vj9nZWSoqKqisrMRgMOD3+2lr
      a2NmZgafz4fRaCQ9PZ0tW7ZQVla2oak54fERAeBrLBKJcPPmTU6fPs3s7CwmkwmDwYDL5aKr
      q4u+vj6OHDlCQUGB2utWFIWPPvqIK1eu4PP50Ov1mM1m/H4/Go2GsrIy/tW/+ldEIhFu3LjB
      rVu3CIfDRKNRrl27lvSg7/r6evLy8u4aABRFoaenB6vVyq5du+67tzo+Pk5raytGo3HdADA0
      NERrayuFhYWkp6er+3W5XPzzP/8zs7OzxGIx0tPTCYfDrK6ucv36dfbs2cO+ffuYnp7mxIkT
      RKNRVldXGRkZYXp6Wt2/TqcjOztbPXYoFOLkyZNcvXqVYDCI3W5HlmXGxsZob29nZGSEo0eP
      JqWSPB4Pp0+fRlEU9Ho9i4uLaLVadSbU0NAQvb29hEIhxsbGiMViGAwGvF4vfX19LC0t8frr
      ryedW7fbzc9+9jOGhoawWCzYbDZ1DKW/v5+XX36ZsrIy9f1+v5/29nZ0Oh25ubkMDw9z+vRp
      JicnWV1dRa/XU1ZWhtfr5ac//SljY2OEw2HS09PVAfJr166xa9cujhw5cl/fnfBsEQHga2x0
      dJQzZ87g8Xh44YUX2Lp1KzqdjlAoxNmzZ7l58yZGo5FvfvObpKenAzA5OUlraysmk4nvfe97
      5ObmIssyoVCIW7duMTExQTgcJisri2PHjrFv3z4uX77M8PAwBw8eZNOmTerxTSYTNpvtruXz
      +/34/X6KiooeaJZNOBzG7/cTDofv+XosFkva/sknnzAyMsJLL71EbW0tZrOZWCzG3NwcHR0d
      +P1+ZFmmqqqKP/3TP2VoaIhPPvmEzZs3c/jwYTWQSJJERkaGut/Lly8npbEcDgeSJKkN54UL
      F7Db7Rw+fFj9TCwWw+v1srq6ypYtWzh06BD5+fnIskxHRwdnz57l6tWrFBQUcODAATZv3ozZ
      bMbr9fL//t//4/r167zwwgtYLBa1XB999BG3bt1iz549HDhwAJ1Ox8rKCp2dnZw8eZKzZ8+S
      m5urnut4PE4oFCIajdLZ2cmNGzdYWFhg27ZtVFdXU1ZWhslk4sSJEwwMDNDc3ExjYyM2m414
      PM7y8jLXrl3D6xU3dfuqEgHgayoQCNDb28vs7CzPP/88+/btw2AwIEkS8XicY8eOEQwGaW9v
      Z8eOHaSlpaHVapmcnCQYDHLkyBG2bdum9koB8vLyCIfDmM1mNBoNWVlZGI1GrFYrer0eh8NB
      YWFhUjnu1atfWFggHo+Tk5PzRM9FwsDAAFlZWbz44osYDAZkWVZTNRUVFUiShCRJmM1mzGYz
      Ho8HnU6H1WrF6XSuu8/FxUWuX7+OLMv85m/+JqWlpWg0GiRJIisri+9///v84Ac/4Ny5czQ1
      NWG329XP6nQ6tmzZwm/+5m9iNpvVq6dYLMbg4OD/196dPrd1nYcf/16AWAiCG8B93yWKIiVS
      1GItlmVLseLIkZ3GTZ12mjbTaWc6bf+GznT6JjOZTl60M0kmmTZtGi9JnNiNLFvWZm2mdlIk
      RYr7Bi4gQQIgAGK9vxca3J8gUrLkiBQlPJ8Zjce4wL3nLjzPvec851z8fj+vvfYaNTU1GI1G
      dDodubm5bNy4kfPnz7O4uEheXh6KojAxMcHly5epra3lG9/4BhaLBUVRtCcMl8tFb28vPT09
      tLS0JOzD0NAQQ0NDmEwm3nzzTRoaGjCbzVp5hoaGSEtL48CBA1pwA8jLy6OsrEy7PsSzR0YC
      P6fm5+cZGxujpKSETZs2aZU/3G3DTk9Pp7W1FbPZzMDAAMFgEEAbXOZwe+Xo/QAAIABJREFU
      OLR23XjFaDabycjIICUlRfvsfvHPH7T8Xl6vF1VVSU9Pf5K7/kBms1kbYxBv8lIUhZSUFKxW
      K2lpadpnj7pvw8PDuFwutm/fTmFhoVb5w93jnJOTw759+/B4PPT39y9bn8ViISMjA4PBoK03
      NTVV+5eRkYHZbNbKGx8cp9friUajWuXb1dVFJBLhpZdeSngqUBQFm81GQ0MDS0tLjI2NLduv
      2dlZzGYzR44cYdu2bVit1oTymEwm/H4/Pp8v4Tjo9XqsVuuanT/x5EkAeE75/X7cbjc2m42c
      nJxlFZqiKFrTi9PpJBwOA1BXV0dmZiYXLlzgRz/6EefPn2dmZmZVyhjvgF6rJoSWlhZCoRA/
      +MEP+OCDD+jt7dUC31flcrkIhUKUl5cnBNk4RVGora3Vmprut1Kw+bLAudLy6elpFEVJaOO/
      9/vp6enaU8397HY7hw4dorGxUQvu99q8eTOKovDv//7vvPfee9y6dYulpaWHllE8G6QJ6DkV
      CATw+XzaneRK4neeHo9Hay+3Wq38/d//Pb/5zW/o7u7mzp076PV68vLy2LlzJ3v37n1io2Lt
      djs6nQ6n0/lE1vdlDh48iMFg4A9/+AOffvopn332GampqTQ0NLBv3z5qamoee51ut5toNKrd
      ld8v3hQUi8VWrHyflNnZWSKRCP/6r/+6YoCIRCIsLi5SWFhIKBRKmEaksrIyoenqfvv27SMl
      JYVjx45x9uxZPv/8c4xGIxs3bmT//v3U19ev2n6J1SUB4DllMBgwGAyEw2EikciKUzQEg0Fi
      sZjWHg53K6zCwkL+4R/+gYWFBbq7u+np6aG3t5ff/e533Lhxg+9///vLUgq/CqvVSmpqKmNj
      YywtLT0wUD0pKSkpvPLKK7z00kv09/drbeJXr16lq6uLQ4cO8bWvfe2xcufjmT2hUAhVVVf8
      rd/v15pSVktqaio6nY7NmzcnjKO4XzzV9V5f1mSn1+vZu3cve/bsYWhoiN7eXrq7u+ns7KS7
      u5uXX36Zo0ePypiDZ5AEgOdUvP14cXERr9eLzWZb9p25uTmCwSAVFRUJ6ZvxP+Ts7Gz27NnD
      7t278Xq9HD9+nEuXLnHhwgXeeOONhHWpqvrYnYGKotDU1MTZs2c5c+YMhw8fXtVKJL7ulJQU
      Nm7cyMaNG/nGN75Bb28v//u//8vVq1dpaWl5rOCWlZWF0WjE6XRSWVm5rJJXVZWpqSmtP2C1
      5OTkoNPpOHDgAEVFRU903ff2J1RXV1NdXc3Xv/51RkZG+PnPf84XX3zBrl27VkzJFeub9AE8
      p9LT08nJyWFsbIyBgYFlKZGRSISbN2/i8XgoLCzUmgSCwSDBYDChQo+3Ie/Zswej0ZjQlKHX
      6zEajQSDQQKBwGMHgYMHD2KxWDhz5gyTk5PLyqmqKpFIRLvDjpcnEokQDocTtqeqKuFweNnn
      cDfl0e/3J3Scwt1gUF5eTnNzM+FweNm+xdNm/X7/iuUvKCjAYrFw/fp1bdDcvZaWljh//jwm
      k2lZhtSTVFpaiqqqXLp0SevPuVcsFmNpaemx2+7vTRW9d98URaG4uJhdu3YRjUZxuVx/9D6I
      tScB4BkUHyzkdruX/Yvnv9tsNjZu3EgoFOLKlSsMDw/j9/tZWlpicXGR9vZ22tvbyc3NZcOG
      Ddqd68WLFzl16hROp1P7fiAQYGFhgZGRESKRCHa7XSuLyWQiIyMDr9fL0NAQ8/PzWsZIIBBY
      VqHfLycnh71797K0tMR//Md/0Nvby8LCgjZGYG5ujvb2dr744gutAjKZTITDYUZGRpibm8Pv
      92vfvXz5Mp2dncsmy/N6vfzqV7+ip6cHr9dLIBAgGAyyuLjI7OwsY2NjpKamauMh4O40FFlZ
      WTgcDgYGBvB6vdq24pVsVVUVNTU1DA4OcvnyZebm5rSK1uPxcO7cOQYGBti4cSNVVVVP5Pyv
      pKWlhYKCAs6dO6fl5vv9fvx+Px6Ph/HxcY4fP87Jkycfa70+n4/f/e53dHR0sLCwgN/vJxgM
      4vP5cLlcDA4OYjKZEq4J8eyQJqBnUDgc5ve///2KbebFxcUcOnQIu91ObW0tO3bs4Pz587zz
      zjvU19djtVqZnp6mu7sbnU7Hyy+/nDCoaWlpibNnz3L+/Hnq6+vJy8sjFAoxPDzM8PAwhYWF
      NDY2at/X6XQUFRVRXl7OxYsXGRwcpLKyElVVsdlsbNu2bcXmp3u9/vrrAFy6dImf/vSnFBQU
      UFhYSDQaZWpqiqmpKZqbm9mzZw9wN2gUFxdz8+ZNFhYWKCoqYnFxkdHRURYXF1fM7Innyv/k
      Jz+htraWkpISrFYrU1NTDA4O4vf72b17d0JZc3JyqK2t5fjx4/zqV7+ipqYGm82Gx+Nh9+7d
      1NbWotPpePHFF5mdneXTTz9leHiYmpoadDodg4ODdHZ2Ul5ezuHDh1cs04M87jKDwcDRo0d5
      //33eeedd6ipqdHSUqempnA4HMRiMXbv3v3gE/EAU1NTXL58mbKyMsrKysjOzmZ6eprBwUFc
      Lhetra1PpE9IrD39P//zP//z0y6EeHTT09PaiNVoNLrsX1paGpWVlVitVsxmM8XFxVgsFmZm
      ZhgdHWVoaAi3201eXh7f/OY3aWhoSGi3Li4uJiMjg4WFBSYnJxkeHmZiYoJQKERlZSWvvvrq
      sjtZq9VKZmYmPp+PhYUFpqencblc2O12ysvLv7RzV6fTsWHDBrKysojFYtpdeXwgVn19Pa2t
      rdqgp/T0dMxmM/Pz88zOzjI5OamlvO7du5fy8nKtfyEzM1PrgC0vLwdgcnKSiYkJhoaGcLlc
      WCwWdu/ezYEDBxKyYwwGA1lZWRgMBtxuN3Nzc0xNTREOh6mtrdXa9DMyMqiqqmJpaUkLKMPD
      wwSDQWpra/nud79Lfn5+wj4HAgEmJycpLi5edjzD4TBOpxOz2Ux1dfWyqTRcLhcej4fGxkZt
      /+Du3Es1NTV4vV5cLhdTU1NMT08TDoe1G4OdO3dq/T1LS0vMzs6SkZGhjfq9n8lkorS0lJSU
      FKanp5mYmGBwcJC5uTkMBgM7d+7k8OHDj9XBHY1GYbQfnWt10ovFo1NUGcb33FNVFb/fj9Pp
      1CaDs9vt2mCflcTbdd1ut1bp2my2hM7i+wWDQRYWFrSMnngH6eOWNRQKsbCwgKqqZGRkrJh2
      qqoqXq8Xp9NJJBIhMzMTm832SNtbXFxkfn6eQCCgNV88bMK6aDSqBbf4NBAWi2VZto2qqrjd
      bqanp4nFYuTn5y+bsG0txCeFm5+fB+52VD+JDCu/38/8/Dw+nw+DwYDdbn/oVB8PEgqFUM9/
      jL6/848uk/jjSAAQQqwpCQDrh3QCCyFEkpIAIIQQSUoCgBBCJClJAxVCrDmlqBzFuHpTY4hH
      I53AQog1FQqF0Ol0D80oE2tDmoCEECJJSQAQQogkJQFACCGSlAQAIYRIUhIAhBAiSUkAEEKI
      JCUBQAghkpQEACGESFIyEkMIsebU/m5U1/TTLkbSkwAghFh7/kWYn33apUh60gQkhBBJSgKA
      EEIkKQkAQgiRpKQPYI35fD7cbjdWq/UrvU/1SVBVVXuZeiAQID09nerq6sd6sbcQ4tm3pgEg
      EonQ0dFBdnY2lZWVa7npB7p/NuxHeYG3qqp0dnYSCoUeaRspKSnk5uZSVFTErVu3OH78OC+9
      9BIvvfTSVynyQ8s1OztLd3c3ubm5bNiwAb1en7Dc4/Fw/PhxLl++TCAQACA7O5t/+qd/Ij8/
      /ysdjydV9mg0ytzcHENDQ0xMTKDX68nPz6eqqorc3FwURVnTF6zfeyzW+sXuQqyFNQ0AgUCA
      n/70pzQ3N/O3f/u3a7npB1JVFbfbjc/nw263k5qa+ki/eeedd3C73QmfxWIxYrEYKSkpCRWG
      xWLhxRdfpKioSPvear2GYXR0lHfeeYedO3dSXV29LACcPXuWtrY27HY7zc3NlJWVodfryczM
      BCAWizEyMkJmZiY2m21Vyni/WCyG2+3mf/7nf+jq6kKv16PT6bRlRqORPXv28K1vfWtNK+Jg
      MMjc3Bwmkwm73S5BQDx3kr4JyOfzcfLkSQYHBzl69CgbNmz40t8oisKf/dmfsbS0pH0WiUT4
      4osvGB0d5eDBg+Tl5WnL4neyayE7O5vW1laqq6uXvXBjYWGBiYkJ7HY7b7/9NlVVVct+73A4
      +NGPfsSBAwc4evTompTZ4XDwk5/8hPn5eerr62ltbaWkpARVVRkZGeHy5cu43e5VC5oPMjAw
      wPvvv09jYyPf+ta31nTbQqyFZyoAxCuAp30npigKjY2NCZ+FQiHGx8eZnJykvr5+xcp1LcpV
      VVX1wG17vV4CgQBFRUWkp6evcelWFg6Hee+993C5XLz44ou88cYbGI1GbXlFRQXbt2/H6/Vq
      TwXr3Xq4TtdDGcT6t+4DQDQaZWlpiaWlJcLhMIqiYDAYsFgsmEymFS/waDTK4uIikUiEWCym
      vX7ObDZjNBpRFEVbr9frJRgMEolEtA7aOIPBgMlkSmhGeZIikQhLS0uEQiEikQgAJpOJtLQ0
      9Hp9wr6Fw2H8fj8WiwWDwYCqqgSDQe0pJC0tDYPBQCQSIRAIYDAYMJvNwN2mjGAwiMfjIRQK
      oSgKfr9f29f48QmHwywuLmrr9ng82vYVRcFsNqPX6/H7/SiKQmpq6orHRlVV7XylpqZiMBge
      eAy6urro7+9n06ZNvPXWWyueT4vFgsVi0f4/GAwSCoUwm80rrju+vxaLZdlx/LJrI36sA4EA
      Pp+PaDS67FjEy3TvtlVVJRAIaOdTURRtvRaLZdl+xc9TSkoKKSkpCdeBTqcjNTWV1NRUFEVh
      aWmJYDBIOBwGwGg0YrVal+2bqqqoqsri4iKhUIhwOExKSgpGo3FZeePHIhgMAmjXebxc4XAY
      s9mM2WxGp9MRjUbx+/2EQiFisVjC/j3o71Csf+s6AIRCISYmJrh27Rp37txhfn4eg8GA3W6n
      paWFxsZGsrOzEyqhUChEX18fFy5cYGZmRqsosrOzaWhoYPPmzdhsNhYWFmhra2NwcJDp6Wl8
      Ph+nTp3i8uXL2rpqa2tpbW3V2sefFFVV8Xq9dHd3093dzdjYGHNzc6iqSnl5OS+//DLV1dUJ
      f7BjY2OcPHmSgwcPUl5ejtPp5NatW9y+fRuDwcCrr75KZWUlU1NTnD9/noqKCnbt2gVAX18f
      V69exeVy4XQ6cbvduN1uLesnKyuLwsJCBgcHWVhYIBwO093dzfz8vLb91NRUXnjhBfLy8jh1
      6hSqqrJv376Epq64cDjMlStXGBsbY9++fZSVlT3wOJw+fRpFUfja1772yJVIX18fnZ2dtLa2
      UlNTs2x5V1cXt27d4tChQxQWFmqfh0Ih+vv7OX/+/AOvjaysLIaHhzl16hRerxePx0NPT09C
      AEhJSeHAgQNUV1cDdyvS+fl5Ll68SG9vL06nEwCbzUZdXR379u3DbrcnPMG4XC5OnjyJzWYj
      Ly+PW7duMTExwfz8PEajkaamJlpbWwHo7OxkYGCAmZkZIpEIpaWlHDp0iNra2oRmvkgkwvj4
      OKdPn8bhcODxeEhNTaW0tJTt27dTV1eX0Mfl8Xi4cuUKer2e1tZWUlJSGBgYoKOjg8nJSXbs
      2MH27dtJSUlheHiYS5cuMTExQSAQwGQykZmZyaZNm2hqaiI3N/eRzp1YX9ZtAIhGowwMDHDs
      2DFmZmYoLCykoqKCUCjE5OQkH330EQ6Hg8OHD2Oz2bTKo7u7m5///Oekp6eTlZVFcXExgUAA
      l8vFZ599xvz8PEePHiUajeLz+RKeABYXF4lGo1oZlpaWiMViT3zfgsEgly5d4urVq+j1erKz
      s6mpqWFhYYHe3l58Ph9/+Zd/SV5enrZfLpeLGzdu0NLSQkpKCh988AH9/f1a5R3/ntfrpaur
      KyF4xPctfuer0+nw+Xza04OqqmRmZuLxeLQngKWlpYSnoXA4rP02HA5z/fp1srOzOXDgwLKK
      e2pqiuvXr2ud4g8SiURwOBzk5uZSW1v7yMfP6XTS2dlJRUXFigFgamqKjo4Odu3aRUFBwWNd
      G0eOHCEUCuF2uwkEAtpd8v1PhvG7cYDp6Wk++OADhoeHyc3NpampCZ1Ox+TkJOfOnWN4eJi3
      3347IRj5fD7a29tZWlrCarVqgchutzM5OcmFCxfo6+sjFosRiUTIysqitraW+fl5+vv78fl8
      /N3f/R3Z2dna/vX39/PLX/4SVVWprq6msbERj8fD4OAgY2NjHD58mB07dmg3TIFAgMHBQQwG
      AxUVFdy5c4fz588TiUSwWq0J6/3v//5vADIzM6msrCQUCuFyuTh16hTT09N897vffeTzJ9aP
      dRsA5ufnaWtrY3Z2lgMHDrB7924tb97hcHDs2DGuXLlCWVkZO3bs0O5mT548iaIofOc732Hj
      xo0YjUZisRjz8/N0dXVpj/m5ubl8+9vfxuv18sknnzywE3g1Hm1VVcVkMtHS0kJzczMFBQUY
      DAa8Xq+WCeN2u7XUx3vNzMzw+eefMz09zQsvvEBrayuFhYWkpaU9cHtbtmxhy5YtDA0N8dvf
      /pbi4mJeffVVsrOzE753+PBhxsbG+OEPf8jOnTt58803E5bHm842b97MlStX6O3tZfv27Qn9
      CfGOW6fTyY4dO8jJyXlgueJPGwUFBY9z+L6yR7k29Ho9DQ0NNDQ00NXVxa9//WsaGxt58803
      V7wWQqEQn3/+OcPDw7S0tPD1r3+dzMxMrenmww8/5MKFC5w4cYK33357WTNMRkYGu3fvpqWl
      RTtWt27d4qOPPmJubo6mpiZ2795NeXk5JpMJv9/Pz372M3p6evD5fNo5DAQCfPjhh0QiEf7k
      T/6E1tZWFEUhHA7T09PDBx98wKVLl6iqqlqWkODz+bhw4QIDAwPk5OSwY8cOamtryc7OJiUl
      hQsXLrC0tMRbb71Fc3Oz1rTo9Xppb29PuGkSz5Z1GQCi0Sj9/f2MjIzQ0tLCrl27EgZNFRUV
      cejQIdxuN5cuXaKuri7hbtlisaDT6XA6nWRkZGCxWLDb7bz44ovaOuLfjeeW3/tvtZlMJnbv
      3s0rr7yS0HyVnp5OZWUlAwMD+Hw+rY36Xu3t7WRkZHDo0CH279+/LNNnJSvt04P2Nf5ZfLv3
      f0ev11NYWEhzczODg4O0t7ezfft2LQC7XC76+/uxWCzU1tY+NDB5PB5UVV3TDunHvTbu/Wyl
      4zU6Okpvby9VVVUcPnxYq/wBzGYzb7zxBrOzs3R0dLBnzx6t2QjuPknU19fz6quvJqy7sLCQ
      3Nxc0tPTOXDgAOXl5Qnlr6ysZHBwkEAggKqqKIrC7du3GR4e5siRI2zfvj1hG9XV1ezZs4ez
      Z8/S2dm5LAA4HA6i0Sj19fXs2bOH4uLihOtOVVWtv2d2dpaMjAxtIOO+ffse+xyI9WNdBoCl
      pSUcDgcGg4FNmzaRlZW17Dvl5eXU19drj+45OTno9XoOHjzIH/7wB376059SXV1NWVkZRUVF
      5OTkaH9UT5tOp8NgMKzYgZqWlkZKSsoDUx7Ly8v5zne+81QzYmw2G/v372dycpKLFy9SVFRE
      VVUV0WiUjo4O+vr6eOmll6iurn5oQI13jvp8vjUp92pcG729vXg8Ht56662Eyj/OYDDw2muv
      8cMf/pDOzs6EAAB3r4X7fxPvGF5pGaAlMsQ7fQGuXbuGoijk5eXR3t6+7DfRaJRIJMLo6CjR
      aDTh2svMzOTw4cNs3Lhxxe3t27ePxcVFfvWrX1FWVkZ5eTnFxcXY7Xby8vKeeB+ZWDvrMgBE
      IhHC4TB6vf6hGThGoxGdTkcoFNL+EBobGzEajVy/fh2n00l7ezuXLl0iOzubzZs309LSQlFR
      0VrtyhO3YcOGdZEOabPZaGxs5NSpU/T29lJeXo7X62V8fJy0tDRKSkq+dGqJeBPD9PQ0sVhs
      1bKt4lbj2ggGg6iqqlXKKzGbzVpm1Wrx+/3EYjFOnDix4vJYLIbBYCA1NXVZAMjLy3voQLcN
      GzaQkpLCzZs3mZqaoru7m7a2NjIyMmhoaKC1tZXS0tJV2S+xutZlADAajaSmpiakOa5kcXGR
      WCymPdbD3Tuq+vp6NmzYwPT0NFNTUzgcDgYHBzl79iwej4dvfetbWjumWNmXDbpKTU2lqqqK
      trY2hoaGtAyjiYkJKioqEjo8H8RsNpOXl8f4+DhjY2NUVFQ8odKvbDWuDavVqnWqR6PRZU1y
      8ZHmOp1uVZ8+MzIy0Ol0vPDCCwkps/ez2WyPHWh1Oh21tbVUV1czOzvL9PQ0ExMTDA8Pc+7c
      OZxOJ3/xF3/x0O2K9WldBgCTyUR6ejp+v5/Z2VnC4fCyzjO/38/k5CRGo5G0tLRldy86nY7C
      wkIKCwtpampiYmKC3/72twwMDDA7O0tJSQnw/9t2I5GIloufzOKVw5fNc6QoCrm5udTX19PR
      0cHt27cJBoP4fD7KysoeuVlg165dvPvuu5w6dYo///M/f+QJ6e5t/nhcj3ttRKPRFSt3uFuh
      mkwmhoaGqKmpWTEA9Pb2otPpVkyZfVLi7fp2u52mpqZV2UZ8H/Ly8ti8eTOzs7O89957Worq
      agdw8eQ9/baEFeh0OvLz80lPT6enp4eJiYmEdMJIJEJnZyfj4+PU1tZqbcnBYJDOzk4tlTFO
      r9eTlZWFzWbTJh2Liw+YWlxcxO12r0ra57Mkfkd7/zFfSXp6upa+ee3aNW7fvk1OTg4lJSWP
      3EzV0tJCSUkJHR0dfP755ywuLiYsj2fpTExMaOdUr9cTCoXwer0JQTsWi+F0OnE6ncuC+Ve5
      NuJPoh6Ph4WFhRXLX1ZWhs1mo6Ojg/Hx8WXbnZiY4OrVq9hstoTO3Cdtw4YNGAwGzp07x+zs
      8jdtBYNBhoaGGBgYeKz1hkIhenp6WFhYSLgeFEUhMzOTvLy8ZcdNPDvW/AlAVVVcLhdtbW3L
      lhkMBgoKCigqKqK0tJTGxka++OILTp48SUtLC3l5eVpH1sWLF9HpdOzYsUPLNAkEAhw7doyS
      khI2bNig3Z253W5GR0cZGhrCbrdjt9u1bRqNRu3/r1+/DtxNEY236xYUFCRVc1FaWhpFRUWM
      jo5y4sQJSkpKsFqtBAIBrbM0Tq/Xax3A165dw2QysXfv3sdK67RarXz961/no48+4vjx47hc
      Lu0JIl75Dw0NkZ6eztGjR1EURRv13NXVRVZWFjk5OSwtLTEzM8PQ0BC9vb3L2ttXujbMZjML
      CwsPvDYyMzPJz8+nr6+Ps2fPUldXR1paGoFAgMLCQmw2Gzk5OTQ3N/PJJ5/w6aefsnPnToqK
      ilAUBafTyYULF3C73Rw5cuShKbF/rIqKCpqbm7l27Rr/93//R2NjI5mZmeh0OtxuN5OTk/T3
      91NaWrqsI/phlpaWOHnyJOnp6WzYsIGcnBzS0tJwu91MTU1x+/ZtsrOzZSDYM2pNA0A8c8Hh
      cPDRRx8tWx4fbVpUVITVaqW1tZVAIEBXVxcTExPYbDai0SjT09NYrVYOHDhAVVWV9thtNpsp
      Ly+nq6uLO3fukJmZiclkwuPx4PF4yMnJYe/evQmpiYqiUFlZSVNTEzdu3MDhcGCz2YjFYmzY
      sIGMjIxHDgCPetf7sHTTlVIQH3cbD8oeeRTxTKqPPvqIjz/+mLy8PNLS0lBVlVdeeWXZH3p2
      dja1tbXcunWLtLQ0SktLHztgxgdOnTt3jhs3btDe3k56ejqqquLz+VAUhZ07d2rfLykpYdOm
      TbS3t3Ps2DEyMjK0/iK73U52drb2u7ivcm1kZWXR1NSEw+Hg4sWL3L59G4vFQjQa5bXXXsNm
      s6HT6WhpaSEUCnHu3Dk+/vhjbWCiy+VicXGRgwcPsmPHjmX7/bBU3IelJa90Dej1eg4dOoTR
      aKS9vZ2hoSEyMjJQFEUb4FhaWrriwLmHXSsmk4nS0lJu3rzJwMCAljrr9XqZn58nIyODl19+
      eV1k14nHp6hrOMViOBzmwoULD1yekpJCcXGx9q4AVVWZm5tjcHAQh8PBwsICKSkp2uN0VVUV
      ZrM54QKen59ndHRUGwofCoUwGAzYbDYqKyupqKhYcU4Up9NJf39/whQBNTU1VFdXP9IU0dFo
      lOHhYaanp2loaHhgG/jU1BSjo6MUFxdTXFy8bPnk5CTDw8PU1NQkTB8wMzPD7du3aWhoeOid
      5Pz8PH19feTk5CybFM7j8TAwMIDVan1oRR0Khbhz5w4jIyPaJGw2m40tW7aseKfX2dnJ+++/
      T3FxMW+88cZXautWVVWbTM/tduP1eoG7zUw5OTkUFxdrA+Oi0SiTk5P09PQwPT1NNBolLS2N
      vLw8SkpKCIfDOJ1O7TzEr4+vcm34/X6Gh4cZGRnB4/GgKArZ2dls2bIlYT99Ph937tzB4XBo
      TTDZ2dkUFBTQ0NCwbDyEx+Ph9u3b2O32ZZVyMBhkcHCQSCRCZWUlVqs1Yfn4+DgjIyNainR8
      /1RVZWFhgb6+PhYWFvB6vaiqSkZGBtnZ2RQXF5OXl6fdMPl8PoaGhtDr9VRUVDzwOne73YyN
      jeFwOHC73SwtLWkj2CsqKqiurk6YwO/LhEIhlM6rpEyOPPJvxOpY0wDwVcViMQKBAH6/H71e
      T1pa2kPT7uDuRRYIBIhEIuj1eiwWy5depPHJ2SKRiNY3sNqpietZfBK++ERwK3XQLi0tcfHi
      RU6fPs2+fft4+eWXH2lw2oPE25Pj2V8mk2nFCd9UVSUUCmkD5sxm8wMnp7vf414bsViMUCik
      NSvFJ7i7//qLp3rG+xniUzys9URp8WMYf+HPgybNe1zxSfLC4TA6nU6bkPFxSQBYP56JACDW
      p0gkQn9/P8eOHcNgMPDGG29IPrj4UhIA1o91mQYq1jefz0dnZ6c2XUcoFOLll19+pNx/IcT6
      sS7TQMX6trS0xMDAAD09PZhMJl588UW2bt36RzX9CCHWnjQBiceSuE0wAAAYDElEQVQWDodx
      uVzavPDxzBB5KYh4FNIEtH5IABBCrKlQKISy5CclJoPHnjZ5ZhdCrDnFYkWRJsOnTvoAhBAi
      SUkAEEKIJCUBQAghkpQEACGESFISAIQQIklJABBCiCQlAUAIIZKUJOIKIdZcdH4evuS1o2L1
      SQAQQqy5xf/8T8InTjztYiQ9aQISQogkJQFACCGSlAQAIYRIUhIAxCOLxWL4/X7tdY1CiGeb
      dAKvsvi7WVVVxWKxPNPvGPb7/Vy5coX09HRaW1uf+Prvfaeu3+9HURRSU1O1d+sKIZ4sCQCr
      zOfzcfPmTSKRCNu3byc9Pf1pF+kr8/l8nDlzhqKioiceAMLhMHfu3GF0dBSn08n8/Dx6vZ6M
      jAwKCwupqamhoqJiTV86E41GCYVC6HS6r/TycyHWOwkAq8zv93Pr1i3C4TANDQ3PdABYLYFA
      gKtXr3L69Gk8Hg8FBQVkZGSgqipTU1N0dXUxPT1NeXn5mgaAubk5bt26RV5eHps3b5Y3nonn
      jgQA8dRdvXqVDz/8EKvVyuHDh6msrCQ7OxtVVZmbm6O/vx+DwbDm5XI6nZw7d47GxkY2b968
      5tsXYrVJAFjn4m/sfF7vPl0uF5999hl6vZ7XX3+dpqamhJfL2+12KioqCAaDz8wxWA/nbD2U
      Qax/EgDWIVVVGR0dZWJiApfLhaqqZGVlUVBQQE1NjfZHHY1GcblcTE5OkpOTQ1FR0YrrW1xc
      ZHJyEoPBQEFBAWazmVgspv3W4/EQCAQASEtLo7i4mJKSEnS61U8S++KLL5iZmeFrX/sazc3N
      K1ZYRqMRo9Go/b/T6WR2dpaCggKys7OXfX9qagqn00lFRQVWqzVhnX6/nzt37uB2uwkGg5hM
      JtLT0ykuLiY3NxdFUZifn2dkZISxsTGWlpaYmZnh5s2b2jp0Oh1lZWUJ21ZVleHhYSYnJxPO
      WVFREVVVVcv2y+fzMTo6itVqJTMzk7GxMWZnZ/H5fBiNRsrKyigrK0NRFCYnJ5mammJ+fh6A
      nJwcNm7cuGzfVFUlHA7T29uL0+nE6/WSmppKfn4+FRUVZGZmJpRhaWmJyclJFEWhsLAQk8mE
      x+NhYmKChYUFCgsLKS4uxmAwEAgEGBwcxOVyEQgEMBqNpKWlUVJSQn5+/ppcK+LJkwCwzoRC
      Idrb22lra2NmZgZFUVAUhUgkQmZmJrt27WLnzp1ahbiwsMCxY8eoqqrizTffXLGpZHh4mDNn
      zlBbW0tOTg4AXV1dXLt2jYmJCUKhEHq9nmg0SiwWIycnh23btrFnz55VvYNUVZVr166RmprK
      3r17H3lbw8PDtLW1sX///hUDQF9fH21tbXz7298mLS1NW+/8/DzHjx+nr68Pv9+vdezqdDqK
      i4vZvn07mzdvZnx8nA8//JBgMIjX66W/v5+ZmRlt/QaDgaNHj2rbDoVC3Lhxg7a2NpxOJzqd
      TjtnNpuNnTt3sn379oQgtrCwwIkTJzAajVitVi3YhEIhwuEwhYWFbN68mVAoxMDAAG63m0gk
      gs/nw2q14nQ6OXDgAKmpqdo64530HR0dRKNR9Ho9sVgMRVHYuHEje/bsoaCgQPu+1+vlypUr
      pKSksH//fiYnJ7ly5Qr9/f14vV72799Pbm4ufr+fkydP0tPTg8fjSegQLygoYNu2bezYseOR
      zp1YXyQArDO3b9/ms88+IxQK8cILL1BQUIBOp2N+fp6zZ8/y8ccfYzab2b59OzqdjvT0dFRV
      paenh7GxMaqqqhLWFwwGGRoaYmxsjM2bN2vplA6HA5/Px6ZNm8jNzcVisRCLxXA6ndp2Kisr
      KS4uXrV9DQQCLCwskJ+frwWmR7G4uMjU1BQ+n2/F5V6vl8nJSYLBYMLn58+f58KFCzQ3N1Nd
      XU16ejrhcJjZ2VmGh4cZHR2lsbGR/Px8Dhw4gMPh4Pr16xQXF9Pc3KytR6fTkZeXp/1/Z2cn
      J06cIBaLsXfvXvLz81EUBZfLxZkzZzh+/Dhms5lt27ZpvwmFQkxMTBAMBiktLWXTpk3anXRv
      by8dHR3MzMyQmZlJWVkZzc3NWK1W3G43J0+e5Ny5c2zfvh2z2awFuHPnznHmzBlqamrYvn07
      FosFv99Pd3c3V69eRafT8dprr2kVeDgcxuVyYTAY6Ovr49atWwwODlJUVMSmTZuoqanBaDRy
      6dIlLly4QE1NDTt27CA7O1t7+uzr62NwcFACwDNKAsA64vV6uXz5Mh6PhyNHjtDS0qL9gUci
      EfLy8vjZz37GyZMnqa+v15oPWlpa+OSTT+jo6KCysjLhTnp2dpbx8XFyc3MpKSnR2tebmprY
      uHEjdrsdi8WiPcIHAgG8Xi+nT5+mq6trVQPA3NwckUiE/Pz8VdvGvW7evElaWhpHjhwhJycH
      vV6PqqoEAgGcTid6vV6r3PPy8uju7qanp4eSkhL27du34jo9Hg9tbW34fD6OHj3K1q1bMZlM
      2jmz2+384he/4PTp02zcuJG0tDTtt3q9nqqqKl577TUKCwuxWCzA3X6PeBPO7t27aWxsJDMz
      k5SUFMLhMOPj41y9epXFxUXsdjuKojA7O8vZs2fJzc3l9ddfp6ioCEVRiEaj5OXl4fP56O7u
      pr6+no0bNybsw+TkJHNzcwQCAXbv3k1TUxM5OTmYzWZ0Oh1dXV0YDAYOHTpEeXm5dg2FQiE2
      bdpELBZbpTMmVps03K0j4+PjOBwO6uvr2bRpU8LdXUpKCvX19bS2tjI5Ocnw8DAAJpOJuro6
      rFYrg4ODOJ3OhHU6HA4mJiYoLy9PePwvLCykvLwcq9Wa0H6bmprKzp070el0TExMrOr+ejwe
      VFVd1ja9WlRVJRqNYjabtQF5iqJgsVgoLy+npKRE+2yl5qj45/cuHxsbY3JykoaGBjZt2qRV
      /nD3nG3atInm5mYcDgcjIyMJ69Pr9eTl5VFdXa01VSmKQmZmJhkZGWRnZ1NZWYndbtcqXYPB
      QG5uLnq9nnA4rHX2xptn9uzZQ3FxsVYGvV5PQUEBzc3NeL1eBgcHl+3X1NQUfr+fvXv3sn//
      fsrKykhLS0Ov16MoCqqqEolEMJlM2meKomAymSgrK6OiouIJnB3xNEgAWEecTieBQICampqE
      tus4RVFoamoiGo1qlbNOp8Nut7N582ZmZmbo6enRvu/3+xkfH0dRFMrKyrQ7zLhoNKo1c8Sb
      Kj7++GPa29tRVXXVp3yIV5bxDujVVl9fTyAQ4L/+67/4/PPPGR0dJRwO/1HrnJ6eZmlpibq6
      OlJTU5edM51Ox+bNm4lEIisG1JWCTbwP4UGB6N6KOW5sbAxFUdi0adOy76ekpGC32zEajVpH
      8r0sFgsvvPACO3bsID09fdk2a2triUajvPvuu5w6dYrBwUFCMpf/c0GagNaReEdfVlZWQirk
      vfLz87UMnri0tDQaGhq4evUqvb29bNu2jbS0NGZmZhgdHaWoqGhZVs/s7CynT5+mv78fv9+P
      TqfDaDRqf/yxWCyhglkN9zZfrIUDBw4Qi8W4dOkSDoeDtLQ0MjMzqa6uZsuWLdoTwOOIn7Ps
      7OwVz5miKOTl5RGLxVhYWHgSu7Gi2dlZotEo77zzzooZOX6/X8v2CofDCckC5eXlWpPiSgFn
      9+7dhMNhLl68yKefforVaiU9PZ3Kykq2bt0qTwDPMAkA64hOp0NV1YdWvNFoFEVREuYU0ul0
      5OfnU1dXx8TEBAMDAzQ2NjI1NcX09DR79uxJ6LT0+Xx89tlnXL16lbq6Og4dOoTNZkuoFH7w
      gx+szk7eIyMjA5PJhMPhIBwOJ2TJrAa73c7hw4dpbW1lZGRE6/gdGRmhu7ub/fv3P3ZnZryy
      jZ+3lSrQ+DlbzVTJ+LrjTw/3s1gsbNiwgdLS0mXXl9lsTmhuvF9WVhavvPIKW7du1Y7X0NAQ
      Z8+epbOzk/379z+wj0SsbxIA1pGMjAyMRiMLCwtEIpEVK8TZ2VkURcFms2mfxduNm5qauH37
      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
      YrHQ2dm5Yifv+Pg4k5OTlJeXk5mZ+RRK+PySACCEeKqqq6spKCigt7eX9vZ2gsGgtszj8fDh
      hx+iqio7duwgJUUmMH6S5GgKIZ6q1NRU9u7dy/T0NJ9++ilzc3NUVFQQCATo6Oigr6+PpqYm
      GhoannZRnzsyG6gQ4qkLBoN0d3fz4Ycf4na7MZlMxGIxfD4fLS0tfPOb38Rut6MoytMu6nNF
      AoAQYl0IhULMz88zPT2Nw+EgNTWVkpIS7HY7mZmZUvmvAgkAQoh1Q1VVotEokUgERVEwGAwo
      iiKV/yqRACCEEElKsoCEECJJSQAQQogkJQFACCGSlAQAIYRIUhIAhBAiSUkAEEKIJCUBQAgh
      kpQEACGESFISAIQQIklJABBCiCQlAUAIIZKUBAAhhEhSEgCEECJJSQAQQogkJQFACCGSlAQA
      IYRIUhIAhBAiSUkAEEKIJCUBQAghkpQEACGESFISAIQQIklJABBCiCQlAUAIIZKUBAAhhEhS
      EgCEECJJSQAQQogkJQFACCGSlAQAIYRIUhIAhBAiSUkAEEKIJCUBQAghkpQEACGESFISAIQQ
      IklJABBCiCQlAUAIIZKUBAAhhEhSEgCEECJJSQAQQogkJQFACCGSlAQAIYRIUhIAhBAiSUkA
      EEKIJCUBQAghkpQEACGESFISAIQQIklJABBCiCQlAUAIIZKUBAAhhEhSEgCEECJJSQAQQogk
      JQFACCGSlAQAIYRIUhIAhBAiSUkAEEKIJCUBQAghkpQEACGESFISAIQQIkn9P6fTMc3+Rh3K
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Avg Frequency' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAT2ElEQVR4nO3deVBV9f/H8de5F1CQkkUBUb+mYCqmjjgqRo3QYmaWYaWV2ZCO0zQtVjNl
      WU3LqH+0aS6V5VSaozXlTLvjkoZaybRgIYqUmoVxAbNAlMty7/n94Y/z+/JrN9H0/XzMOKOc
      ezmfAzPnyfl8jhzHdV1XAABzfCd7AACAk4MAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIA
      AEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      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
      IQDAKa7lds8xY8Zo7Nix3scLCwu1dOlSbdmyReedd54cx9HIkSNVWFio9957T7t379awYcO8
      E3BGRobeeustPffcc4qNjVW7du28K4vjLS0tTV9//bUGDBigSZMmyefzyXVdBQIBxcXF6eef
      f/aObdq0aWrfvr0aGxt/MwhHjhxROByW67r65ZdfWm3r1auXJKlHjx6666675Pf75bquDh48
      2OqK5Y/0799fPp9Pq1ev1nXXXae4uDiFQiEFg0F16NBBXbp00fDhw1VQUOAtug8aNOgffoVO
      DAIAnMJc19WmTZskSZdffrmGDh3qbUtOTtaKFSv06aefqrm5WZGRkRoxYoSioqL0+uuvq6mp
      STk5Od7rx4wZozfffFNlZWW6/fbbJanN7ucfP3683n33Xc2fP1+FhYXq0qWL9u/f7y3aDhgw
      QKmpqdqzZ48mTZqkHj16qLi4WKFQyPscZ555piIiIrR9+3bdfPPNqq2t1d69e1vt59JLL9WK
      FSv02muvqbS0VL169VIgENC2bds0e/ZsZWdn/+lY+/Xrp5ycHG3YsEGTJk1S//79VVlZqX79
      +um+++6T4zjKy8tTQUGBgsGgLrnkkla3j/6bcRcQcAo7fPiwqqqqlJaWpn79+rXa1r17dw0Y
      MEDNzc3evHe3bt2UkZEhn8+n+Ph4jRgxwnt9+/bttXjxYs2YMUOTJ0/WY4895i0G/94JrVOn
      TkpOTvamWv6/uLg4JSUl/Wp737599cQTT+jss89WcXGx1q1bp3379mncuHFKSkpSdHS0Zs+e
      rfT0dB04cEA7d+5UTk5Oqzn4M844Q/n5+YqJidHOnTsVFRWlG264QUlJSd50VteuXTV37lwN
      HDhQ3377rdasWaNvvvlGOTk56t27tyQpMTFRycnJ3jH6fD517txZnTp1kuM4chxHDz/8sCZM
      mODdbltVVeW9X5KGDRumlJQURUREaNSoUX/+jfuXcNx/OskG4JRSV1enhoYG+Xw+xcXFeXPz
      1dXVqq+v13/+8x9JR28TnT59ur788ks99dRTGjly5HEfSzgcVk1NjRzHUWxs7K+mZZqbm1Vb
      W6vo6GhVV1drwoQJGjhwoBYvXuz9R66amho1NTUpMTHxdxeMW17nuq5iY2N/N1h/5siRI97U
      T8vagHR0HWbixInq2bOnXnrppX+0cH0iMQUEGBMbG/ubd6iUlpbq7rvvVmpqqhISEvTDDz/o
      l19+Ue/evVtNLR1PLVcivyciIkIJCQm/u91xHMXFxf3pfv7q6/5MTEyMYmJivH9XVlbq6aef
      1tdff636+npNmTLllDn5SwQAwP/q1auXrrzySu3atUs//fSTUlNTNXr0aG+a5WSLiIhQUlLS
      HwbjRGtqatIXX3yhxMRE3XzzzTrvvPNO9pD+FqaAAMCoU+daBQBwXBEAADCKAACAUQQAAIwi
      AABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIrfBQSgTe3Zs0dr1qyRJI0ePVo9e/ZUQ0ODVq1a
      pfLycg0ZMkS5ubmtfonagQMHtGrVKtXV1WnUqFE655xz1NTUpHfeeUe7d+/WoEGDdPHFF58y
      v3f/34orAABtprGxUY8//rji4uJUUVGhW265RXV1dXrttdcUDAbVt29fzZkzR8XFxd57XNfV
      c889p6SkJCUkJOiuu+5SbW2t3nnnHVVXV2vgwIF6+umnVVhYeBKP7PTAFQCANtPc3Kxrr71W
      OTk5amho0Lhx4xQIBDRgwADv4fMFBQXeQ+ylo88IuOKKKzRw4EBJ0ttvv61QKKT09HTl5eXJ
      7/fr008/VUNDw0k5ptMJAQDQZmJiYrzHTtbV1al9+/ZKTU1Venq69whIn8/X6hm6fr9fgwYN
      UllZmTZv3qwLL7xQ8fHxSkhIUCAQUHFxsWpqapSVlXWSjur0wRQQgDYXDof14osvavr06d6z
      BSorKxUbG6uqqiotXrz4V+/Zv3+/unXrptWrV2vDhg2SpKqqKkVFRam+vl7z5s07ocdwOuIK
      AECbcl1XK1eu9B6u7rquGhsblZmZKUlqaGjQypUrvdc3NzfLdV3l5uZKkoqLi7Vt2zZlZ2d7
      00IREREE4DjgCgBAm3FdV6tWrVIgEFBGRoZKS0u1d+9eLVy4UC3PotqzZ49yc3PV1NSk9957
      TxUVFVq+fLm3/fvvv1d2drYWLVqk5uZm7z0tU0s4djwRDECb2bt3rx566CE5jiPHcRQKhXTB
      BReorq5OP/74o1JSUpScnKyJEyfq559/1t13360nn3xSc+bMUadOnRQdHa3BgwcrNzdXS5Ys
      UWlpqbp37674+Hhdf/31x/xwdxxFAACccK7rqr6+XpGRka1O4uFwWD6fT+FwWMFgUO3atfPu
      9W95T0REhCIjI+U4zska/mmDAACAUawBAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBR/wMvjTu6j3ptsgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Avg Monetary' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUgUlEQVR4nO3df2xV9f3H8de55d7S31h+SLuWov0BLTrmaKBcflhdx8r4pQ5RiCYzI7pl
      LsxplrnNBBXN/GOZCUE0DvklOJUpxtnAcDoKtLcpIlhX2owwpV1LW9rdll7sLbf3fP9ouF8r
      bt+aL4wf7+cj6T8953LOvSTnec7nnNuP47quKwCAOZ5LvQMAgEuDAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRIy71DgC48BobG9XZ2SlJmjRpkkaPHn3RtuW6rv7+97+rv79fkjRx4kQlJycPWd7Q0KCB
      gQFJUl5enkaOHHnR9gfD57iu617qnQBw4UQiEa1YsULHjx+XJK1cuVI//OEPL9r2zp49qzvv
      vFPNzc2SpIcffljLly+PLT916pTmz5+vc4eaDRs2aOrUqRdtf74oEolo9erVCofDWrNmjeLj
      4/9r277cMQQEXGVOnDihTz75RPn5+fL5fKqqqlI0Gr2o23RdVyNGjFB8fLwCgYA+f15ZU1Mj
      13WVlJQUW/fLXv//PRf9d/+G67qqq6vToUOHYlchGMQQEHCV2bdvn6LRqO666y698cYbamho
      UFtbmzIyMhQMBrVjxw6lp6fr9ttvl+M4kqT9+/fr6NGjKi0tVX5+vqLRqGpqarRv3z6dPXtW
      kydPVnZ2toLBoObNm/el201LS1NeXp7q6up0+vRppaamSpKqqqo0duxYTZw4UbW1tUNec/Lk
      Sf3hD39QY2OjEhISdMstt6i8vFxer1eSFAgEVFdXp5tvvlkNDQ2qra2V1+vV0qVLVVRUJGnw
      AH/48GG98cYb6ujoUGZmplasWKG8vDx1dnZqx44d6unpUX9/vzZt2iSv16spU6bI7/fr008/
      1d69e/XJJ5+ot7dXOTk5Wrx4sbKzsyVJ//jHP/Tuu+9q6tSpKiws1Jtvvqm4uDglJyervb1d
      3/nOdzRhwgRJUigU0quvvqqRI0dq+fLlsc/2ckYAgKuI67rat2+fHMdRSUmJWlpaVF9fr+rq
      at1xxx3y+Xx6/fXXFQqFVFZWptTUVLmuqxdeeEENDQ2aN2+eXNfV888/r02bNikajcrn8+mt
      t96S67qaM2fOvw2AJPn9ftXU1Ki+vl4lJSXq6+vT4cOHddNNNykcDg9Zt6WlRffff79Onjyp
      +Ph4RSIRVVZWqq6uTo8++qgcx1FlZaVee+01bdu2TaFQSB6PRwMDA6qurtbrr7+u5ORkVVZW
      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
      /fznP9f999+vtLQ03XrrrYqLi4utf24OYXw1XDsBuOCWLFmiHTt2qLm5We+//75uv/12ffrp
      p1q2bJkkqby8XNu3b9eJEyd05MgRLV26VIsWLZLf79eoUaPkuq5yc3PlOI4aGxv15JNPqry8
      XDNmzFBhYaEWLFigoqIiSYP3BsaNG3cp3+4VixnBAFxwruvq4MGDampq0vTp05WVlaWzZ8/q
      448/1tSpUyVJBw4cUE9Pj0pKSpSeni7HcdTc3KzW1lY5jiOPx6Pc3Fzt378/FoZz0y5Go1Ed
      PnxY0WhUrusqIyNDWVlZl/ItX5EIAAAYxRAQABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAqP8BwwCW4TZSC9EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Customer Segmentation' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Customer Segmentation Dashboard' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='LOckdown channel id' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Revenue Seg 2' width='384'>
      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
      2tvbaWlpkWq9sVgMuVxOdnY2zzzzzKI+g4V5CC6Xi/HxcU6ePMnJkycBeO6556irq/vCnX0G
      g4Hvfve7pKWlcerUKWw2G2fOnJHuIhdKNgtLFyiVSgoLC1m9ejXt7e309fXR19cnbZeVlUVB
      QQFjY2OLjqPRaMjNzUWv13Pu3DlOnjwp1ccX7uYrKyvZtGnTogasqqqKjRs3YrfbmZycXBQu
      6enplJWVodFo2Lt3L263m7Nnz9Lc3My5c+ek7dRqNVVVVbz88stkZ2dLZbU7l7i428irha/d
      7Snr07a3Wq18+9vf5u2336avr48jR45w5MgRaZuFdX0WJrH99v4+bQSYSqUiJyeH1NRUWlpa
      aGpqkn6GotEoGo2G5cuXs2nTJgoKCu66D0F4FD2UALBYLGzbto35+fklr2k0GsxmM5mZmdIQ
      zTvrxiqVih07dpCdnc25c+cYHh6W6tML4/lXrlxJfX291Jht376dtLQ0rl69yuTkJD6fT6rp
      p6ens379ehoaGpYsx7B//37UajXXrl3D5XIRj8dRqVRUVFRIww4/TwexTCaTFg1b+P+0tDRe
      ffVVVqxYwfXr15mamsLr9RKPxzEYDBQUFLBhwwZp6YX8/Hxee+01jh49it1uJxaLYTQaKSkp
      Yc2aNVL5rKysTOroNJvNPP7445jNZjo6OpiZmZH+2I1GoyEvL4+tW7dSW1u7KNQsFgv79+9H
      r9fT1dWF3+8nHo9LQzsXGsyysjJef/11cnNzuXnzJg6Hg1gsJi2u1tjYyKpVqxZ9H7VaLZs3
      b2Zubo6ysrIld+MrV64kEAhgNBqXdOampqbyxBNPIJfLF3VYq1Qqdu7cSX5+Ph9++CE2m00a
      7aPRaKR1n9atWyf15+j1etauXYvRaKSysvKu37eUlBS2bduGwWDg+vXr2Gw2gsEgsVgMjUYj
      Ta5bv369+OttwleKLPEVLlourKnvdruJRqMYjUaMRuOnPtovrHszPz9PKBRCr9djtVp/Zz1/
      4T3RaFR6z8zMDP/7v/9714lNn0apVLJx40YaGho+9fOEQiFmZ2eJx+OkpqbedZLUnWv+RCIR
      0tPTsVqt97Q6aTgcxul04nQ6icVimEwm0tPTP7NTdOG6ud1uYrEYqampmEymJdc5kUjgdDqx
      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
      ra2N7u7uRce+973vYTabMZlM7Nq1i66uLhobGzl79iz19fXI5XK8Xi9OpxO/309JSQmFhYUo
      lUr8fj/T09Ncu3aN69evo1KpxDxqoaaKTqejsLAQvV4v3tNkMpGTkyMGjd966y1OnDgBQFlZ
      Gc8+++w3qs3zXSQ+Pp7s7GxaWlqYnp7mo48+4vz580ilUgoLC3nqqafC6vILCq27u1tMq9y+
      ffsdzXDVajWvvPIKf/3rX6mtrWV0dJT33ntPzHLx+/243W7RoEgkEkwmEwaDAYfDQWdnJ3/4
      wx/EfR8LCwtLztKFGlH9/f1YLBb++9//olKpxJLYQvpweno6OTk54nlms5ktW7bQ29vL0NAQ
      x44d45133gHgwIED/OhHPyI6OlqU26amJj799FPq6uoWye3evXtFuV0pTCYTR44c4R//+AdT
      U1O8+eabvPfee+JeD5/Px/z8/JJj9HV4PB6Gh4epqqrizJkzYsxOGD+5XI7ZbCYvL28Fehbh
      m7JqBkDwKS4XJHO73WL+dXZ2Nj/96U/R6/V88cUXomKBGwqnoqKCiooKkpOTkUgkJCcnU1lZ
      iUql4tq1a4tcAmlpaTzxxBMUFRWFvXhyuZynnnoKn89HbW2taCyE9txJTEBQTsutGL4acLuT
      TBfh3OWCdvcSmUxGeXk5c3NzfPLJJ0xNTYmlKoT6/F9t286dO/nss8+w2+2kp6eTnp5+x4H2
      tWvX8qtf/Yrc3FzOnz9Pf39/mEsuPj6e0tJScZx1Oh0vvvgir776KrOzs0xPTyORSDAYDJSX
      l6PT6Th27JjYJ7gxk9+5cyd2u52amhosFktYG3Q6HSUlJRw9ejRsopCQkMD+/ftxOBzU1tbi
      dDpxOp0AYWU8cnJyeP7559Hr9VRXV4fJbXR0NJWVlVRUVGAymcJSK5f6/ebxXe7YcrIgk8nE
      TKbXX3+d3t7esD0iwl6Fhx56KOw5Cddb7rpKpZKioiJ++MMf8vnnnzM2Nia2MRQKieUinnzy
      yTsKoEf49pCEvkGkU6g3f6d4vV7m5uZuWVpYqVSi1WpFBRoIBHC5XFitVgYGBpiZmRH9+mvW
      rEGj0YjKQNiY4vF4xEyEyclJMW9ZmC0qlcpFL1EwGMTlcjExMcHExARerxetVktGRgYGg+G2
      g5F2u51QKIRSqVxy9iuUaRAUVXR0dNjSW/jKyNnZWWQyGVqtVnw5/X4/LpcLr9eLSqVaNgtI
      2I3pdrsXjSfccJe4XC6CwSBarXbJonXCmLjdbux2OxaLhfn5edRqNampqSQmJi7K0hkZGeH3
      v/897e3tHD16lKeeeuquXQBut1usWjo8PIzH4yEhIYE1a9aIlTEFheP1erFYLPT29uJ0OklI
      SCAjI0NMwxQKoOl0OnEDkyDDTqcTq9WKzWZjfn4evV6PyWQiMTERjUazSAn6/f6wc7xeL7Gx
      saSlpREXFxdWVG0puU1PTychISFMboWxnpubw+v1olarw+JScKNulGBkYmJiwsZeSPUMBAJE
      RUUturbP58PpdIrlrH0+H7GxsaIbT61WixOiUCiE0+kUN5AtpcCF8RPkyGq1YrVacTqdxMbG
      YjKZMBqNi/oQ4f5hVQzA3SKUXPb7/eJGGGEmvFyWQjAYFH+AsHNuhVDwC8Jn6/fL5rHVQBhH
      IaNFmIV+dUxee+01PvzwQ7xeL7/73e/Ytm3bN46dCLuhhee+1AxYkI9AICDuaF2qkNxy1/9q
      /2Qy2S0N/s33g/CV2VKfuxO5XUmWGkuh/d/kmje/a0IfV7KUR4Rvzncqoim8MHfiL71ZwO+E
      uz3v/zO3GpOenh4xcNrQ0MDs7Cz79u0TM1C+KTeXbbjVZ77u+xZuda5MJrtjV9zt3O9u5HYl
      uZ2xvJtr3un4RVh9vlMGIML9y5kzZ/j000+Zm5vD7/ezbt06KioqxDIDESJEuP+IGIAI9wSt
      Vivml+fl5bF//37S09Mjq6gIEe5jvlMxgAj3LzfvEpbJZKLvPTL7jxDh/iWyAohwT7hf/NsR
      IkS4fSLr8wgRIkT4HyViACJEiBDhf5SIAYgQIUKE/1H+DwoT54MCQQEOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Revenue per Segment' width='384'>
      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
      HJZHYPazPwDJMymQWO9yqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 25' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG1klEQVR4nO3ZTUskVwCG0du2X4Rs5v//pmyyDkwIZDFMsskicbSrbhZOYEDI2GO0Ujzn
      gAq9er3c8mn1MOecA4Cci60HALANAQCIEgCAqCcBWNd1ix0vtq7rWJZl6xlnm3OO0+m09Yxv
      8vDwsPWEb3I6ncZe//W11zP3fL6959yVJwHY64Mx59zlBRtj2P3G9vpAj7HfM59z7vLN5V53
      j/G8u+JPQABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFEC
      ABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAA
      UQIAEHX55JWPv4/xw48bTHmZiznGYcwxDoetp5ztap1jXOxv97Xdb26v2/f6fB7mGJfz8cz/
      eP/T+Ovjh60nPds613Fx+Pf3+E8DcH8/xoffXmvTqzl8/tibve4eY7+/Pu519xj73b7Xe/7l
      7of3P49Pv/6y5Zz/3F7vEwAvJAAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABR
      AgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUA
      AFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFEC
      ABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAA
      UQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABR
      AgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUA
      AFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFEC
      ABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAA
      UQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABR
      AgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUA
      AFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQdfnkleNxjO+/22DKy8z5+PVw2HbH
      uebnT3vbPcbjme919ziMscPp+z7zsb/tX+6+ePduHD/9ue2gM8w5x+ErB36Y859v8dGyLON4
      PL7qsNewLMtYlmVcX19vPeUsc85xf38/bm5utp5ytru7u3F7e7v1jLPd3d2Nm5ubrz4c/0d7
      PfNlWca6ruPq6mrrKWdZ13WcTqfd/VwZ43l3xZ+AAKIEACBKAACiBAAgSgAAogQAIEoAAKIE
      ACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAA
      ogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBKAACiBAAgSgAAogQAIEoAAKIEACBK
      AACiBAAgSgAAogQAIEoAAKIEACBKAACi/gY3frbC0F35xQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Total Transactions' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3xUVfr/P3daCqRXSEihhNACoQiBIEWBUHTtBRXssOLaVldQ2RUrFr6I
      yq5tV10RFKW4FOklCYReEyAhPQHS26RPub8/zm9ucjN3kqkI3Of9euUFd+6dc889M3M+5zzP
      c57D8TzPgyAIgpAdij+6AgRBEMQfAwkAQRCETCEBIAiCkCkkAARBEDKFBIAgCEKmkAAQBEHI
      FBIAgiAImUICQBAEIVNIAAiCIGQKCQBBEIRMIQEgCIKQKSQABEEQMoUEgCAIQqaQABAEQcgU
      EgCCIAiZQgJAEAQhU0gACIIgZAoJAEEQhEwhASAIgpApJAAEQRAyhQSAIAhCppAAEARByBQS
      AIIgCJlCAkAQBCFTSAAIgiBkCgkAQRCETCEBIAiCkCkkAARBEDKFBIAgCEKmkAAQBEHIFBIA
      giAImUICQBAEIVNIAAiCIGQKCQBBEIRMIQEgCIKQKSQABEEQMoUEgCAIQqaQABAEQcgUEgCC
      IAiZQgJAEAQhU0gACIIgZAoJAEEQhEwhASAIgpApJAAEQRAyhQSAIAhCppAAEARByBQSAIIg
      CJlCAkAQBCFTSAAIgiBkCgkAQRCETCEBIAiCkCkkAARBEDKFBIAgCEKmkAAQBEHIFBIAgiAI
      mUICQBAEIVNIAAiCIGQKCQBBEIRMIQEgCIKQKSQABEEQMoUEgCAIQqaQABAEQcgUEgCCIAiZ
      QgJAEAQhU0gACIIgZAoJAEEQhEwhASAIgpApJAAEQRAyhQSAIAhCppAAEARByBQSAIIgCJlC
      AkAQBCFTSAAIgiBkCgkAQRCETCEBIAiCkCkkAARBEDKFBIAgCEKmkAAQBEHIFBIAgiAImUIC
      QBAEIVNIAAiCIGQKCQBBEIRMIQEgCIKQKSQABEEQMoUEgCAIQqaQABAEQcgUEgCCIAiZQgJA
      EAQhU0gACIIgZAoJAEEQhEwhASAIgpApJAAEQRAyhQSAIAhCppAAEARByBQSAIIgCJlCAkAQ
      BCFTSAAIgiBkCgkAQRCETCEBIAiCkCkkAARBEDKFBIAgCEKmkAAQBEHIFBIAgiAImUICQBAE
      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
      y0I6a5k2bRr27t0rRIqtX78e999/v0vMe7169cLzzz+PpKQk7N69G4cOHUJubq7ZrMaUXPHI
      kSN46aWXMH36dJd9z26YGYA1KJVKhIWF4bnnnsOCBQsciuDgeR4XLlwQZfQbNGgQNBqNkMir
      /V9ERIQoHCw7O9spq2GliIyMxM033ywcFxUVYd++fS51NHl6emLy5MlYvHgxPvzwQ7z00ksY
      MmSIZEpf06pse0ZzWq1W5ET38/ND7969hdFh+z8PDw+Ro7ahoQGnTp2y6/m6d+8u6hRcmZ/l
      RkCj0YhEWavV2my/b25uFplCOpbpDEJDQ3HrrbcK39GdO3e6zBcAsNlAbGws/vznP2Pp0qV4
      9913MW3aNPj7+5vNoGtqavCf//wHFy9edNlv94aZAXSFm5sbnnrqKdx1110ie7y9GAwGHD9+
      XPQFLS4uxscff2xxetc+CiUvLw85OTkIDw93uC4dUalUeOCBB7Bp0yZUVVUJ6wJmzJjhlGyk
      luA4Tuh0Y2Njcf/99yMnJwfr16/Hvn37hKgQg8GA9evXY8KECTavciwuLhbZ8hsaGvDDDz9Y
      ND+Vl5cL/9fr9UhJScHo0aNtHkn6+fmJBCAzM1OWid2sxcPDQzTAqqmpsTkKq3c60s4AACAA
      SURBVLGxUSS07u7uNjuSu0KpVOKuu+7Cr7/+iitXriAjIwN79uzBQw895NT7dEShUCAsLAxh
      YWGYOHEiampqsGPHDvz+++/IyMgQTD/5+fn49ttvsXjxYpt9KNZwwwiAUqnEvHnz0KdPH7S2
      tmLdunUiO7vBYIBarXZaI5pGk+07gezsbKtTMLS2tuLo0aOYMGGCU+rTEX9/f8ycOROrVq0C
      z/OorKzE1q1bMXfuXJfcTwqlUomYmBi88MILmDBhAt5++23RrOf48eM2bdjC8zwOHTokciTX
      1dVh+/btVtcpMzMTFRUVNjtxo6OjoVarBRtxbm4u6urqBIc7Ica0yZApAKG2ttbmwIe6ujpR
      +gdfX1+XtLfJF/Dll1/CYDBg3bp1olQUVwNfX1/cc889SEhIwL/+9S/s2rVLEIFz586hqanJ
      JQJww5iAOI7D0KFDMWHCBEyZMgVvvPGGaNWhXq/HV199hV9++cUpjqTS0lJRkit7SE5OdqpT
      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
      5cU6MHtXuzoLnmcdxw8/WL7GZBuvrWXPIjXinjaNjXTbn4uMZAvinn6aRax88AEzBz36KBPF
      8nKW7mDXLhap4+XFRs6dRcuUlLTVp76ejYItMXw4y5vzt7+xey1dynIDzZ/PZgKXL7N7b9nC
      QixNm8dY2ojmyhUmJP/5D5u1/b/27i+kqTYO4PhPzUnkollSs9Alb4RBXUT/bkrpz1VETIog
      gyRXUHTRRUTazYLqpq6KugyKEKs7LUgQiiCtIDC7iHIMSodJLtqgHNO19+L3ztScbqm9xu/7
      uYqopic53+ec8zzPqarSwC1ZovF68UKfd6TWoZSW6p/PZm+n1K2jx4/1yqm+Pv3D41Rkm5t1
      PcDZs/rMobJSp97evKnRmj9/Zm8B9fX1yfPnz6WpqUmCwWDWJ56cnBypqKiQ2tpa2bp1a9rl
      /+Mlk0np7e2VGzduSFtbW8af63Q6paamRmpqarJ6scjw8LA8e/ZMrly5MuV0x9HKysrk/Pnz
      UlFRMemJ9fv373LhwoVfbv+4XC5paGiQysrKKWOVTCYlFArJ9evXszomhYWFcujQITl48GBW
      K5SHh4elvb1dLl++nPUx8fv9smbNmqw2xfv69avcunVL7t27l/Fq7Ly8PPF6vXLkyJE/O/Mn
      nY4OvSc9emrh5s26TiCL13jOimRSb7+cOze9f2fvXt1GYfyVXTyuJ6L6+rHff36+nvRTP6/z
      5uktmlOnJp+meu2ajuxFdNpla6tufZDO4KDOojl9WkfEIjqadjg0HqnPLyzUgJ05k/4B8P37
      +p6G8aP/1OZ1o3k8+gxix47sZhS9favrEd6/11lkDx9OPW23o0P3Cxr9wpnU15SXJ3LixMwG
      IGVoaEjevXsnjx49kkAgIP39/dLf3z/hPemFCxeK2+2WsrIy2b17t2zatCnjE/94iURCnjx5
      Is3NzdLV1ZV2Y7gVK1bI2rVrxefzZbSKN51IJCJ37tyR9vZ2CQQCE45GHQ6HrFq1Snbt2iVe
      rzejUWdPT4/U1tb+sk/O8ePHpS612i9DqWPS0tIir1+/TntMli9fLuvWrZO6urqMRuLpRKPR
      kWPS3d096THZuXOnVFdXT2sk/ubNG2lsbJTOzs60b/VatGiRrF+/Xqqrq2XLli2//VmzYv/+
      n5t7iegtgqNH/7+vJyWZ1JNMU9P03mm8YYOufZhopksyqdstX72qI/D+/p+rg10u/bs+n+5r
      P9XVeWuryO3b+uviYh31ZrKALhjU20xtbbo2YHBQv9alS3Vnz4YGXUk72ecPDemLZhob9T28
      nz9r1GIxDZjTqVc9e/boVc4UL2mZ0N27GtKCAt3KYdu2zB6Gh0K6ncTLl/qi+Px8vTo5cEBk
      //7ZCUBKIpGQaDQqAwMDEg6HJR6Py6dPnyQSiYjH45GCggJxOp1SXFwsixcvzmoUPploNCrd
      3d0SCoXGrP50OBwjc+VTL6WfrkQiIX19fRIMBuXDhw9j9rYpKioSj8cjHo9Hli1blvFskwcP
      Hojf7x/zexs3bpSLFy/+skI2U3PlmLhcLvF4PLJy5cqsjslkYrGYBAIBCYVCEgwGxzxjKi8v
      F7fbLatXr56xn68Z1dKiUwFjMT1hdXb+3gnibzY4qCffcFgDkJ+vo9t//hm7++ZsSa2c7enR
      /4eCAr19U1o68cPpdIaG9FZUOKwPpeNxHWkvWKBXdCUlvz+DKR7XY5Obq4HKZm+o4WE9+X/5
      okFyu0dWJc9qAJC9WCwmJ0+eHLNyt6SkRC5dujTpmgH8pQYGRA4f1hFsfb2I3z/9jd+ADM2Z
      vYCgUqP0lNzcXNm3b1/aqbD4yxUV6X3o7dt16t6ffN8vzCMAc8iPHz/k1atXEv7voVROTo5U
      VVWJ1+udkbeGYQ7KzdWtekdv1wv8IQw35pBv377J06dPR+5hu91u8fl8s/+yEgAmEYA5pLe3
      V7q6ukREF8IdO3Ys7YIvAJguHgLPIZFIRD5+/CgiuhirvLx8RmblAMBECAAAGMUtIAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY9S+PjLifcwdu5QAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='loyal_cust' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
